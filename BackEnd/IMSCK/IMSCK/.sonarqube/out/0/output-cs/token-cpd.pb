å
SD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\LoginController.cs
	namespace

 	
IMSCK


 
.

 
API

 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
LoginController  
:! "
ControllerBase# 1
{ 
private 
readonly 
LoginService %
loginService& 2
;2 3
public 
LoginController 
( 
)  
{ 	
loginService 
= 
new 
LoginService +
(+ ,
new, /
LoginDao0 8
(8 9
)9 :
): ;
;; <
} 	
[ 	
Route	 
( 
$str 
) 
] 
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
LoginDto9 A
credentialsB M
)M N
{ 	
ServiceResponse 
< 

Dictionary &
<& '
string' -
,- .
string/ 5
>5 6
>6 7
check8 =
=> ?
await@ E
loginServiceF R
.R S

loginCheckS ]
(] ^
credentials^ i
)i j
;j k
if 
( 
check 
. 
Data 
!= 
null "
)" #
{# $
return 
Ok 
( 
check 
)  
;  !
}   
return!! 

BadRequest!! 
(!! 
$str!! 1
)!!1 2
;!!2 3
}## 	
}%% 
}&& ù'
[D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\QuestionnaireController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
]N O
public 

class #
QuestionnaireController (
:) *

Controller+ 5
{ 
private 
readonly  
QuestionnaireService - 
questionnaireService. B
;B C
public #
QuestionnaireController &
(& '
)' (
{ 	 
questionnaireService  
=! "
new# & 
QuestionnaireService' ;
(; <
new< ?
QuestionnaireDao@ P
(P Q
)Q R
)R S
;S T
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str !
)! "
]" #
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
QuestionnaireDto9 I
questionnaireJ W
)W X
{   	
ServiceResponse"" 
<"" 

Dictionary"" &
<""& '
string""' -
,""- .
string""/ 5
>""5 6
>""6 7
response""8 @
=""A B
await""C H 
questionnaireService""I ]
.""] ^
addQuestionnaire""^ n
(""n o
questionnaire""o |
)""| }
;""} ~
if$$ 
($$ 
response$$ 
.$$ 
Success$$  
)$$  !
{%% 
return&& 
Ok&& 
(&& 
response&& "
)&&" #
;&&# $
}'' 
return(( 

BadRequest(( 
((( 
response(( &
)((& '
;((' (
}** 	
[-- 	
HttpGet--	 
]-- 
[.. 	
Route..	 
(.. 
$str.. %
)..% &
]..& '
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
Get//) ,
(//, -
)//- .
{00 	
string11 
username11 
=11 
HttpContext11 )
.11) *
GetUserName11* 5
(115 6
)116 7
;117 8
ServiceResponse33 
<33 
List33  
<33  !

Dictionary33! +
<33+ ,
string33, 2
,332 3
string334 :
>33: ;
>33; <
>33< =
response33> F
=33G H
await33I N 
questionnaireService33O c
.33c d
getQuestionnaires33d u
(33u v
username33v ~
)33~ 
;	33 Ä
if55 
(55 
response55 
.55 
Success55  
)55  !
{66 
return77 
Ok77 
(77 
response77 "
)77" #
;77# $
}88 
return99 

BadRequest99 
(99 
response99 &
)99& '
;99' (
};; 	
[== 	
HttpGet==	 
]== 
[>> 	
Route>>	 
(>> 
$str>> 
)>> 
]>>  
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
Get??) ,
(??, -
[??- .
	FromRoute??. 7
]??7 8
int??9 <
id??= ?
)??? @
{@@ 	
stringAA 
usernameAA 
=AA 
HttpContextAA )
.AA) *
GetUserNameAA* 5
(AA5 6
)AA6 7
;AA7 8
ServiceResponseCC 
<CC 
ListCC  
<CC  !

DictionaryCC! +
<CC+ ,
stringCC, 2
,CC2 3
stringCC4 :
>CC: ;
>CC; <
>CC< =
responseCC> F
=CCG H
awaitCCI N 
questionnaireServiceCCO c
.CCc d$
getQuestionnaireSymptomsCCd |
(CC| }
username	CC} Ö
,
CCÖ Ü
id
CCá â
)
CCâ ä
;
CCä ã
ifEE 
(EE 
responseEE 
.EE 
SuccessEE  
)EE  !
{FF 
returnGG 
OkGG 
(GG 
responseGG "
)GG" #
;GG# $
}HH 
returnII 

BadRequestII 
(II 
responseII &
)II& '
;II' (
}KK 	
}LL 
}MM Æ
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\RegisterController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
RegisterController #
:$ %

Controller& 0
{ 
private 
readonly 
RegisterService (
registerService) 8
;8 9
public 
RegisterController !
(! "
RegisterService" 1
registerService2 A
)A B
{ 	
this 
. 
registerService  
=! "
registerService# 2
;2 3
} 	
[ 	
Route	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
RegisterDto9 D
credentialsE P
)P Q
{ 	
ServiceResponse 
< 
string "
>" #
check$ )
=* +
await, 1
registerService2 A
.A B
addUserB I
(I J
credentialsJ U
)U V
;V W
if 
( 
check 
. 
Data 
!= 
null "
)" #
{ 
return 
Ok 
( 
check 
)  
;  !
} 
return   

BadRequest   
(   
$str   =
)  = >
;  > ?
}"" 	
}## 
}$$ “
UD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\SymptomController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
]N O
public 

class 
SymptomController "
:# $

Controller% /
{ 
private 
readonly 
SymptomService '
symptomService( 6
;6 7
public 
SymptomController  
(  !
)! "
{ 	
symptomService 
= 
new  
SymptomService! /
(/ 0
new0 3
SymptomsDao4 ?
(? @
)@ A
)A B
;B C
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
)  
]  !
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
ServiceResponse 
< 
List "
<# $

Dictionary% /
</ 0
string0 6
,6 7
string8 >
>> ?
>? @
>@ A
responseB J
=K L
awaitM R
symptomServiceS a
.a b
getSymptomsb m
(m n
)n o
;o p
if 
( 
response 
. 
Data 
. 
Count #
!=$ &
$num' (
)( )
{ 
return   
Ok   
(   
response   "
)  " #
;  # $
}!! 
return"" 

BadRequest"" 
("" 
response"" &
)""& '
;""' (
}$$ 	
}&& 
}'' ˆ
YD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Auth\AuthenticationResult.cs
	namespace 	
IMSCK
 
. 
Auth 
{ 
public 

class  
AuthenticationResult %
{		 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
Succes 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
ErrorMessage "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ≠
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Auth\JwtSettings.cs
	namespace 	
IMSCK
 
. 
Auth 
{ 
public		 

class		 
JwtSettings		 
{

 
public 
string 
Secret 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ∑
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Config\DBConfig.cs
	namespace 	
IMSCK
 
. 
Config 
{ 
public 

class 
DBConfig 
{		 
public

 
string

 
dbConnectionString

 (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
} 
} ≠
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Config\JwtConfig.cs
	namespace 	
IMSCK
 
. 
Config 
{ 
public 

class 
	JwtConfig 
{		 
public

 
string

 
Secret

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
} 
} €
MD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ILoginDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
	ILoginDao 
{ 
public 
Task 
< 
bool 
> 

loginCheck $
($ %
LoginDto% -
credentials. 9
)9 :
;: ;
}

 
} Ü
UD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\IQuestionnaireDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public		 

	interface		 
IQuestionnaireDao		 &
{

 
public 
Task 
< 
int 
> 
addQuestionnaire )
() *
string* 0
username1 9
,9 :
int; >
severityPercentage? Q
)Q R
;R S
public 
Task 
< 
bool 
> $
addQuestionnaireSymptoms 2
(2 3
QuestionnaireDto3 C
questionnaireD Q
,Q R
intS V
idQuestionnaireW f
)f g
;g h
public 
Task 
< 
bool 
> $
rollbackAddQuestionnaire 2
(2 3
int3 6
idQuestionnaire7 F
)F G
;G H
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5
getQuestionnaires6 G
(G H
stringH N
usernameO W
)W X
;X Y
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5$
getQuestionnaireSymptoms6 N
(N O
stringO U
usernameV ^
,^ _
int` c
idd f
)f g
;g h
} 
} ·
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\IRegisterDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
IRegisterDao !
{ 
public 
Task 
< 
bool 
> 
addUser !
(! "
RegisterDto" -
credentials. 9
)9 :
;: ;
}

 
} æ
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ISymptomsDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
ISymptomsDao !
{		 
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5
getSymptoms6 A
(A B
)B C
;C D
} 
} Á
LD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\LoginDAO.cs
	namespace		 	
IMSCK		
 
.		 
DAO		 
{

 
public 

class 
LoginDao 
: 
	ILoginDao %
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
LoginDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain !
.! "
CurrentDomain" /
./ 0
BaseDirectory0 =
)= >
. 
AddJsonFile 
( 
$str *
)* +
.+ ,
Build, 1
(1 2
)2 3
;3 4
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
bool 
> 

loginCheck  *
(* +
LoginDto+ 3
credentials4 ?
)? @
{ 	
string   
md5StringPassword   $
=  % &
	AppHelper  ' 0
.  0 1

GetMd5Hash  1 ;
(  ; <
credentials  < G
.  G H
Password  H P
)  P Q
;  Q R
conn"" 
."" 
Open"" 
("" 
)"" 
;"" 
string## 
sql## 
=## 
$str## ]
;##] ^
MySqlCommand$$ 
cmd$$ 
=$$ 
new$$ "
MySqlCommand$$# /
($$/ 0
sql$$0 3
,$$3 4
conn$$5 9
)$$9 :
;$$: ;
cmd&& 
.&& 

Parameters&& 
.&& 
AddWithValue&& '
(&&' (
$str&&( 3
,&&3 4
credentials&&5 @
.&&@ A
Username&&A I
)&&I J
;&&J K
cmd'' 
.'' 

Parameters'' 
.'' 
AddWithValue'' '
(''' (
$str''( /
,''/ 0
md5StringPassword''1 B
)''B C
;''C D
cmd(( 
.(( 
Prepare(( 
((( 
)(( 
;(( 
MySqlDataReader** 
result** "
=**# $
await**% *
Task**+ /
.**/ 0
Run**0 3
(**3 4
(**4 5
)**5 6
=>**7 9
{++ 
return,, 
cmd,, 
.,, 
ExecuteReader,, (
(,,( )
),,) *
;,,* +
}-- 
)-- 
;-- 
if// 
(// 
result// 
.// 
HasRows// 
)// 
{00 
conn11 
.11 
Close11 
(11 
)11 
;11 
return22 
true22 
;22 
}33 
conn44 
.44 
Close44 
(44 
)44 
;44 
return66 
false66 
;66 
}77 	
}99 
}:: éù
TD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\QuestionnaireDAO.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

class 
QuestionnaireDao !
:" #
IQuestionnaireDao$ 5
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
QuestionnaireDao 
(  
)  !
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain "
." #
CurrentDomain# 0
.0 1
BaseDirectory1 >
)> ?
. 
AddJsonFile 
( 
$str +
)+ ,
., -
Build- 2
(2 3
)3 4
;4 5
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
int 
> 
addQuestionnaire /
(/ 0
string0 6
username7 ?
,? @
intA D
severityPercentageE W
)W X
{   	
conn!! 
.!! 
Open!! 
(!! 
)!! 
;!! 
int"" 
idQuestionnaire"" 
=""  !
await""" '#
generateIdQuestionnaire""( ?
(""? @
)""@ A
;""A B
string$$ 
sql$$ 
=$$ 
$str	$$ ´
;
$$´ ¨
MySqlCommand&& 
cmd&& 
=&& 
new&& "
MySqlCommand&&# /
(&&/ 0
sql&&0 3
,&&3 4
conn&&5 9
)&&9 :
;&&: ;
cmd(( 
.(( 

Parameters(( 
.(( 
AddWithValue(( '
(((' (
$str((( :
,((: ;
idQuestionnaire((< K
)((K L
;((L M
cmd)) 
.)) 

Parameters)) 
.)) 
AddWithValue)) '
())' (
$str))( 3
,))3 4
username))5 =
)))= >
;))> ?
cmd** 
.** 

Parameters** 
.** 
AddWithValue** '
(**' (
$str**( /
,**/ 0
DateTime**1 9
.**9 :
Now**: =
.**= >
ToString**> F
(**F G
$str**G ^
)**^ _
)**_ `
;**` a
cmd++ 
.++ 

Parameters++ 
.++ 
AddWithValue++ '
(++' (
$str++( =
,++= >
severityPercentage++? Q
)++Q R
;++R S
cmd,, 
.,, 
Prepare,, 
(,, 
),, 
;,, 
int.. 
result.. 
=.. 
await.. 
Task.. #
...# $
Run..$ '
(..' (
(..( )
)..) *
=>..+ -
{// 
return00 
cmd00 
.00 
ExecuteNonQuery00 *
(00* +
)00+ ,
;00, -
}11 
)11 
;11 
if33 
(33 
result33 
!=33 
$num33 
)33 
{44 
conn55 
.55 
Close55 
(55 
)55 
;55 
return66 
idQuestionnaire66 &
;66& '
}77 
conn88 
.88 
Close88 
(88 
)88 
;88 
return99 
-99 
$num99 
;99 
}:: 	
public<< 
async<< 
Task<< 
<<< 
bool<< 
><< $
rollbackAddQuestionnaire<<  8
(<<8 9
int<<9 <
idQuestionnaire<<= L
)<<L M
{== 	
conn>> 
.>> 
Open>> 
(>> 
)>> 
;>> 
string@@ 
sql@@ 
=@@ 
$str@@ m
;@@m n
MySqlCommandAA 
cmdAA 
=AA 
newAA "
MySqlCommandAA# /
(AA/ 0
sqlAA0 3
,AA3 4
connAA5 9
)AA9 :
;AA: ;
cmdCC 
.CC 

ParametersCC 
.CC 
AddWithValueCC '
(CC' (
$strCC( :
,CC: ;
idQuestionnaireCC< K
)CCK L
;CCL M
cmdDD 
.DD 
PrepareDD 
(DD 
)DD 
;DD 
intFF 
resultFF 
=FF 
awaitFF 
TaskFF #
.FF# $
RunFF$ '
(FF' (
(FF( )
)FF) *
=>FF+ -
{GG 
returnHH 
cmdHH 
.HH 
ExecuteNonQueryHH *
(HH* +
)HH+ ,
;HH, -
}II 
)II 
;II 
ifLL 
(LL 
resultLL 
==LL 
$numLL 
)LL 
{MM 
connNN 
.NN 
CloseNN 
(NN 
)NN 
;NN 
returnOO 
falseOO 
;OO 
}PP 
sqlRR 
=RR 
$strRR V
;RRV W
cmdSS 
=SS 
newSS 
MySqlCommandSS "
(SS" #
sqlSS# &
,SS& '
connSS( ,
)SS, -
;SS- .
cmdUU 
.UU 

ParametersUU 
.UU 
AddWithValueUU '
(UU' (
$strUU( :
,UU: ;
idQuestionnaireUU< K
)UUK L
;UUL M
cmdVV 
.VV 
PrepareVV 
(VV 
)VV 
;VV 
resultXX 
=XX 
cmdXX 
.XX 
ExecuteNonQueryXX (
(XX( )
)XX) *
;XX* +
ifZZ 
(ZZ 
resultZZ 
==ZZ 
$numZZ 
)ZZ 
{[[ 
conn\\ 
.\\ 
Close\\ 
(\\ 
)\\ 
;\\ 
return]] 
false]] 
;]] 
}^^ 
conn__ 
.__ 
Close__ 
(__ 
)__ 
;__ 
return`` 
true`` 
;`` 
}aa 	
publiccc 
asynccc 
Taskcc 
<cc 
boolcc 
>cc $
addQuestionnaireSymptomscc  8
(cc8 9
QuestionnaireDtocc9 I
questionnaireccJ W
,ccW X
intccY \
idQuestionnairecc] l
)ccl m
{dd 	
connff 
.ff 
Openff 
(ff 
)ff 
;ff 
Listgg 
<gg 
stringgg 
>gg 
keyListgg  
=gg! "
newgg# &
Listgg' +
<gg+ ,
stringgg, 2
>gg2 3
(gg3 4
questionnairegg4 A
.ggA B
symptomsggB J
.ggJ K
KeysggK O
)ggO P
;ggP Q
inthh 
resulthh 
=hh 
-hh 
$numhh 
;hh 
foreachii 
(ii 
stringii 
keyii 
inii  "
keyListii# *
)ii* +
{jj 
stringkk 
sqlkk 
=kk 
$str	kk ∫
;
kk∫ ª
MySqlCommandll 
cmdll  
=ll! "
newll# &
MySqlCommandll' 3
(ll3 4
sqlll4 7
,ll7 8
connll9 =
)ll= >
;ll> ?
cmdnn 
.nn 

Parametersnn 
.nn 
AddWithValuenn +
(nn+ ,
$strnn, F
,nnF G
idQuestionnairennH W
)nnW X
;nnX Y
cmdoo 
.oo 

Parametersoo 
.oo 
AddWithValueoo +
(oo+ ,
$stroo, :
,oo: ;
keyoo< ?
)oo? @
;oo@ A
cmdpp 
.pp 

Parameterspp 
.pp 
AddWithValuepp +
(pp+ ,
$strpp, >
,pp> ?
questionnairepp@ M
.ppM N
symptomsppN V
[ppV W
keyppW Z
]ppZ [
)pp[ \
;pp\ ]
cmdqq 
.qq 
Prepareqq 
(qq 
)qq 
;qq 
resultss 
=ss 
awaitss 
Taskss #
.ss# $
Runss$ '
(ss' (
(ss( )
)ss) *
=>ss+ -
{tt 
returnuu 
cmduu 
.uu 
ExecuteNonQueryuu .
(uu. /
)uu/ 0
;uu0 1
}vv 
)vv 
;vv 
ifxx 
(xx 
resultxx 
==xx 
$numxx 
)xx  
{yy 
returnzz 
falsezz  
;zz  !
}{{ 
}|| 
return~~ 
true~~ 
;~~ 
} 	
private
ÅÅ 
async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
int
ÅÅ 
>
ÅÅ %
generateIdQuestionnaire
ÅÅ  7
(
ÅÅ7 8
)
ÅÅ8 9
{
ÇÇ 	
string
ÉÉ 
sql
ÉÉ 
=
ÉÉ 
$str
ÉÉ L
;
ÉÉL M
MySqlCommand
ÑÑ 
cmd
ÑÑ 
=
ÑÑ 
new
ÑÑ "
MySqlCommand
ÑÑ# /
(
ÑÑ/ 0
sql
ÑÑ0 3
,
ÑÑ3 4
conn
ÑÑ5 9
)
ÑÑ9 :
;
ÑÑ: ;
MySqlDataReader
ÖÖ 
result
ÖÖ "
=
ÖÖ# $
await
ÖÖ% *
Task
ÖÖ+ /
.
ÖÖ/ 0
Run
ÖÖ0 3
(
ÖÖ3 4
(
ÖÖ4 5
)
ÖÖ5 6
=>
ÖÖ7 9
{
ÜÜ 
return
áá 
cmd
áá 
.
áá 
ExecuteReader
áá (
(
áá( )
)
áá) *
;
áá* +
}
àà 
)
àà 
;
àà 
result
ää 
.
ää 
Read
ää 
(
ää 
)
ää 
;
ää 
int
ãã 
idQuestionnaire
ãã 
=
ãã  !
result
ãã" (
.
ãã( )
GetInt32
ãã) 1
(
ãã1 2
$num
ãã2 3
)
ãã3 4
+
ãã5 6
$num
ãã7 8
;
ãã8 9
result
åå 
.
åå 
Close
åå 
(
åå 
)
åå 
;
åå 
return
çç 
idQuestionnaire
çç "
;
çç" #
}
éé 	
public
êê 
async
êê 
Task
êê 
<
êê 
List
êê 
<
êê 

Dictionary
êê )
<
êê) *
string
êê* 0
,
êê0 1
string
êê2 8
>
êê8 9
>
êê9 :
>
êê: ;
getQuestionnaires
êê< M
(
êêM N
string
êêN T
username
êêU ]
)
êê] ^
{
ëë 	
conn
íí 
.
íí 
Open
íí 
(
íí 
)
íí 
;
íí 
string
ìì 
sql
ìì 
=
ìì 
$strìì É
;ììÉ Ñ
MySqlCommand
îî 
cmd
îî 
=
îî 
new
îî "
MySqlCommand
îî# /
(
îî/ 0
sql
îî0 3
,
îî3 4
conn
îî5 9
)
îî9 :
;
îî: ;
cmd
ññ 
.
ññ 

Parameters
ññ 
.
ññ 
AddWithValue
ññ '
(
ññ' (
$str
ññ( 3
,
ññ3 4
username
ññ5 =
)
ññ= >
;
ññ> ?
cmd
óó 
.
óó 
Prepare
óó 
(
óó 
)
óó 
;
óó 
MySqlDataReader
ôô 
result
ôô "
=
ôô# $
await
ôô% *
Task
ôô+ /
.
ôô/ 0
Run
ôô0 3
(
ôô3 4
(
ôô4 5
)
ôô5 6
=>
ôô7 9
{
öö 
return
õõ 
cmd
õõ 
.
õõ 
ExecuteReader
õõ (
(
õõ( )
)
õõ) *
;
õõ* +
}
úú 
)
úú 
;
úú 
List
ûû 
<
ûû 

Dictionary
ûû 
<
ûû 
string
ûû "
,
ûû" #
string
ûû$ *
>
ûû* +
>
ûû+ ,
questionnaires
ûû- ;
=
ûû< =
new
ûû> A
List
ûûB F
<
ûûF G

Dictionary
ûûG Q
<
ûûQ R
string
ûûR X
,
ûûX Y
string
ûûZ `
>
ûû` a
>
ûûa b
(
ûûb c
)
ûûc d
;
ûûd e

Dictionary
üü 
<
üü 
string
üü 
,
üü 
string
üü %
>
üü% &
questionnaire
üü' 4
;
üü4 5
while
°° 
(
°° 
result
°° 
.
°° 
Read
°° 
(
°° 
)
°°  
)
°°  !
{
¢¢ 
questionnaire
££ 
=
££ 
new
££  #

Dictionary
££$ .
<
££. /
string
££/ 5
,
££5 6
string
££7 =
>
££= >
(
££> ?
)
££? @
;
££@ A
questionnaire
§§ 
.
§§ 
Add
§§ !
(
§§! "
$str
§§" &
,
§§& '
result
§§( .
.
§§. /
GetInt32
§§/ 7
(
§§7 8
$num
§§8 9
)
§§9 :
.
§§: ;
ToString
§§; C
(
§§C D
)
§§D E
)
§§E F
;
§§F G
questionnaire
•• 
.
•• 
Add
•• !
(
••! "
$str
••" ,
,
••, -
result
••. 4
.
••4 5
	GetString
••5 >
(
••> ?
$num
••? @
)
••@ A
)
••A B
;
••B C
questionnaire
¶¶ 
.
¶¶ 
Add
¶¶ !
(
¶¶! "
$str
¶¶" (
,
¶¶( )
result
¶¶* 0
.
¶¶0 1
GetDateTime
¶¶1 <
(
¶¶< =
$num
¶¶= >
)
¶¶> ?
.
¶¶? @
ToString
¶¶@ H
(
¶¶H I
)
¶¶I J
)
¶¶J K
;
¶¶K L
questionnaire
ßß 
.
ßß 
Add
ßß !
(
ßß! "
$str
ßß" 6
,
ßß6 7
result
ßß8 >
.
ßß> ?
GetInt32
ßß? G
(
ßßG H
$num
ßßH I
)
ßßI J
.
ßßJ K
ToString
ßßK S
(
ßßS T
)
ßßT U
)
ßßU V
;
ßßV W
questionnaires
®® 
.
®® 
Add
®® "
(
®®" #
questionnaire
®®# 0
)
®®0 1
;
®®1 2
}
©© 
conn
´´ 
.
´´ 
Close
´´ 
(
´´ 
)
´´ 
;
´´ 
System
¨¨ 
.
¨¨ 
Console
¨¨ 
.
¨¨ 
	WriteLine
¨¨ $
(
¨¨$ %
questionnaires
¨¨% 3
.
¨¨3 4
Count
¨¨4 9
)
¨¨9 :
;
¨¨: ;
return
ÆÆ 
questionnaires
ÆÆ !
;
ÆÆ! "
}
ØØ 	
public
±± 
async
±± 
Task
±± 
<
±± 
List
±± 
<
±± 

Dictionary
±± )
<
±±) *
string
±±* 0
,
±±0 1
string
±±2 8
>
±±8 9
>
±±9 :
>
±±: ;&
getQuestionnaireSymptoms
±±< T
(
±±T U
string
±±U [
username
±±\ d
,
±±d e
int
±±f i
id
±±j l
)
±±l m
{
≤≤ 	
conn
≥≥ 
.
≥≥ 
Open
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
string
¥¥ 
sql
¥¥ 
=
¥¥ 
$str
¥¥ ~
+¥¥ Ä
$str
µµ v
+
µµw x
$str
∂∂ .
;
∂∂. /
MySqlCommand
∏∏ 
cmd
∏∏ 
=
∏∏ 
new
∏∏ "
MySqlCommand
∏∏# /
(
∏∏/ 0
sql
∏∏0 3
,
∏∏3 4
conn
∏∏5 9
)
∏∏9 :
;
∏∏: ;
cmd
∫∫ 
.
∫∫ 

Parameters
∫∫ 
.
∫∫ 
AddWithValue
∫∫ '
(
∫∫' (
$str
∫∫( 3
,
∫∫3 4
username
∫∫5 =
)
∫∫= >
;
∫∫> ?
cmd
ªª 
.
ªª 

Parameters
ªª 
.
ªª 
AddWithValue
ªª '
(
ªª' (
$str
ªª( -
,
ªª- .
id
ªª/ 1
)
ªª1 2
;
ªª2 3
cmd
ºº 
.
ºº 
Prepare
ºº 
(
ºº 
)
ºº 
;
ºº 
MySqlDataReader
ææ 
result
ææ "
=
ææ# $
await
ææ% *
Task
ææ+ /
.
ææ/ 0
Run
ææ0 3
(
ææ3 4
(
ææ4 5
)
ææ5 6
=>
ææ7 9
{
øø 
return
¿¿ 
cmd
¿¿ 
.
¿¿ 
ExecuteReader
¿¿ (
(
¿¿( )
)
¿¿) *
;
¿¿* +
}
¡¡ 
)
¡¡ 
;
¡¡ 
List
√√ 
<
√√ 

Dictionary
√√ 
<
√√ 
string
√√ "
,
√√" #
string
√√$ *
>
√√* +
>
√√+ ,
symptoms
√√- 5
=
√√6 7
new
√√8 ;
List
√√< @
<
√√@ A

Dictionary
√√A K
<
√√K L
string
√√L R
,
√√R S
string
√√T Z
>
√√Z [
>
√√[ \
(
√√\ ]
)
√√] ^
;
√√^ _

Dictionary
ƒƒ 
<
ƒƒ 
string
ƒƒ 
,
ƒƒ 
string
ƒƒ %
>
ƒƒ% &
symptom
ƒƒ' .
;
ƒƒ. /
while
∆∆ 
(
∆∆ 
result
∆∆ 
.
∆∆ 
Read
∆∆ 
(
∆∆ 
)
∆∆  
)
∆∆  !
{
«« 
symptom
»» 
=
»» 
new
»» 

Dictionary
»» (
<
»»( )
string
»») /
,
»»/ 0
string
»»1 7
>
»»7 8
(
»»8 9
)
»»9 :
;
»»: ;
symptom
…… 
.
…… 
Add
…… 
(
…… 
$str
……  
,
……  !
result
……" (
.
……( )
GetInt32
……) 1
(
……1 2
$num
……2 3
)
……3 4
.
……4 5
ToString
……5 =
(
……= >
)
……> ?
)
……? @
;
……@ A
symptom
   
.
   
Add
   
(
   
$str
   "
,
  " #
result
  $ *
.
  * +
	GetString
  + 4
(
  4 5
$num
  5 6
)
  6 7
)
  7 8
;
  8 9
symptom
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
$str
ÀÀ &
,
ÀÀ& '
result
ÀÀ( .
.
ÀÀ. /
GetInt32
ÀÀ/ 7
(
ÀÀ7 8
$num
ÀÀ8 9
)
ÀÀ9 :
.
ÀÀ: ;
ToString
ÀÀ; C
(
ÀÀC D
)
ÀÀD E
)
ÀÀE F
;
ÀÀF G
symptoms
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
symptom
ÃÃ $
)
ÃÃ$ %
;
ÃÃ% &
}
ÕÕ 
conn
œœ 
.
œœ 
Close
œœ 
(
œœ 
)
œœ 
;
œœ 
System
–– 
.
–– 
Console
–– 
.
–– 
	WriteLine
–– $
(
––$ %
symptoms
––% -
.
––- .
Count
––. 3
)
––3 4
;
––4 5
return
““ 
symptoms
““ 
;
““ 
}
”” 	
}
‘‘ 
}’’ Ñ+
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\RegisterDAO.cs
	namespace		 	
IMSCK		
 
.		 
DAO		 
{

 
public 

class 
RegisterDao 
: 
IRegisterDao +
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
RegisterDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain "
." #
CurrentDomain# 0
.0 1
BaseDirectory1 >
)> ?
. 
AddJsonFile 
( 
$str +
)+ ,
., -
Build- 2
(2 3
)3 4
;4 5
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
bool 
> 
addUser  '
(' (
RegisterDto( 3
credentials4 ?
)? @
{ 	
conn 
. 
Open 
( 
) 
; 
if!! 
(!! 
!!! 
await!! 
findUser!! !
(!!! "
credentials!!" -
)!!- .
)!!. /
{"" 
string## 
md5StringPassword## (
=##) *
	AppHelper##+ 4
.##4 5

GetMd5Hash##5 ?
(##? @
credentials##@ K
.##K L
Password##L T
)##T U
;##U V
string%% 
sql%% 
=%% 
$str%% ]
;%%] ^
MySqlCommand&& 
cmd&&  
=&&! "
new&&# &
MySqlCommand&&' 3
(&&3 4
sql&&4 7
,&&7 8
conn&&9 =
)&&= >
;&&> ?
cmd(( 
.(( 

Parameters(( 
.(( 
AddWithValue(( +
(((+ ,
$str((, 7
,((7 8
credentials((9 D
.((D E
Username((E M
)((M N
;((N O
cmd)) 
.)) 

Parameters)) 
.)) 
AddWithValue)) +
())+ ,
$str)), 3
,))3 4
md5StringPassword))5 F
)))F G
;))G H
cmd** 
.** 
Prepare** 
(** 
)** 
;** 
int,, 
result,, 
=,, 
await,, "
Task,,# '
.,,' (
Run,,( +
(,,+ ,
(,,, -
),,- .
=>,,/ 1
{-- 
return.. 
cmd.. 
... 
ExecuteNonQuery.. .
(... /
)../ 0
;..0 1
}// 
)// 
;// 
if11 
(11 
result11 
!=11 
$num11 
)11  
{22 
conn33 
.33 
Close33 
(33 
)33  
;33  !
return44 
true44 
;44  
}55 
}66 
conn88 
.88 
Close88 
(88 
)88 
;88 
return99 
false99 
;99 
}:: 	
private<< 
async<< 
Task<< 
<<< 
bool<< 
><<  
findUser<<! )
(<<) *
RegisterDto<<* 5
credentials<<6 A
)<<A B
{== 	
string>> 
sql>> 
=>> 
$str>> H
;>>H I
MySqlCommand?? 
cmd?? 
=?? 
new?? "
MySqlCommand??# /
(??/ 0
sql??0 3
,??3 4
conn??5 9
)??9 :
;??: ;
cmdAA 
.AA 

ParametersAA 
.AA 
AddWithValueAA '
(AA' (
$strAA( 3
,AA3 4
credentialsAA5 @
.AA@ A
UsernameAAA I
)AAI J
;AAJ K
cmdBB 
.BB 
PrepareBB 
(BB 
)BB 
;BB 
MySqlDataReaderDD 
resultDD "
=DD# $
awaitDD% *
TaskDD+ /
.DD/ 0
RunDD0 3
(DD3 4
(DD4 5
)DD5 6
=>DD7 9
{EE 
returnFF 
cmdFF 
.FF 
ExecuteReaderFF (
(FF( )
)FF) *
;FF* +
}GG 
)GG 
;GG 
boolII 
respII 
=II 
resultII 
.II 
HasRowsII &
;II& '
resultJJ 
.JJ 
CloseJJ 
(JJ 
)JJ 
;JJ 
returnKK 
respKK 
;KK 
}MM 	
}NN 
}OO õ

SD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ServiceResponse.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

class 
ServiceResponse  
<  !
T! "
>" #
{ 
public 
T 
Data 
{ 
get 
; 
set  
;  !
}" #
public

 
bool

 
Success

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
true

, 0
;

0 1
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
null. 2
;2 3
public 
static 
implicit 
operator '
ServiceResponse( 7
<7 8
T8 9
>9 :
(: ;
ServiceResponse; J
<J K
objectK Q
>Q R
vS T
)T U
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ¢"
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\SymptomsDao.cs
	namespace

 	
IMSCK


 
.

 
DAO

 
{ 
public 

class 
SymptomsDao 
: 
ISymptomsDao +
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
SymptomsDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain !
.! "
CurrentDomain" /
./ 0
BaseDirectory0 =
)= >
. 
AddJsonFile 
( 
$str *
)* +
.+ ,
Build, 1
(1 2
)2 3
;3 4
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
List 
< 

Dictionary )
<) *
string* 0
,0 1
string2 8
>8 9
>9 :
>: ;
getSymptoms< G
(G H
)H I
{ 	
conn 
. 
Open 
( 
) 
; 
string   
sql   
=   
$str   O
;  O P
MySqlCommand!! 
cmd!! 
=!! 
new!! "
MySqlCommand!!# /
(!!/ 0
sql!!0 3
,!!3 4
conn!!5 9
)!!9 :
;!!: ;
MySqlDataReader"" 
result"" "
=""# $
await""% *
Task""+ /
.""/ 0
Run""0 3
(""3 4
(""4 5
)""5 6
=>""7 9
{## 
return$$ 
cmd$$ 
.$$ 
ExecuteReader$$ (
($$( )
)$$) *
;$$* +
}%% 
)%% 
;%% 
List'' 
<'' 

Dictionary'' 
<'' 
string'' "
,''" #
string''$ *
>''* +
>''+ ,
symptoms''- 5
=''6 7
new''8 ;
List''< @
<''@ A

Dictionary''A K
<''K L
string''L R
,''R S
string''T Z
>''Z [
>''[ \
(''\ ]
)''] ^
;''^ _

Dictionary(( 
<(( 
string(( 
,(( 
string(( %
>((% &
symptom((' .
;((. /
while** 
(** 
result** 
.** 
Read** 
(** 
)**  
)**  !
{++ 
symptom,, 
=,, 
new,, 

Dictionary,, (
<,,( )
string,,) /
,,,/ 0
string,,1 7
>,,7 8
(,,8 9
),,9 :
;,,: ;
symptom-- 
.-- 
Add-- 
(-- 
$str-- "
,--" #
result--# )
.--) *
	GetString--* 3
(--3 4
$num--4 5
)--5 6
)--6 7
;--7 8
symptom.. 
... 
Add.. 
(.. 
$str.. )
,..) *
result..* 0
...0 1
	GetString..1 :
(..: ;
$num..; <
)..< =
)..= >
;..> ?
symptoms// 
.// 
Add// 
(// 
symptom// $
)//$ %
;//% &
}00 
conn22 
.22 
Close22 
(22 
)22 
;22 
return33 
symptoms33 
;33 
}44 	
}55 
}66 ô	
\D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Extensions\GeneralExtensions.cs
	namespace 	
IMSCK
 
. 

Extensions 
{ 
public		 

static		 
class		 
GeneralExtensions		 )
{

 
public 
static 
string 
GetUserName (
(( )
this) -
HttpContext. 9
httpContext: E
)E F
{ 	
if 
( 
httpContext 
. 
User  
==! #
null$ (
)( )
{ 
return 
string 
. 
Empty #
;# $
} 
else 
{ 
return 
httpContext "
." #
User# '
.' (
Claims( .
.. /
Single/ 5
(5 6
x6 7
=>8 :
x; <
.< =
Type= A
==B D
$strE O
)O P
.P Q
ValueQ V
;V W
} 
} 	
} 
} Î
QD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Helpers\AppHelper.cs
	namespace 	
IMSCK
 
. 
Helpers 
{		 
public

 

static

 
class

 
	AppHelper

 !
{ 
public 
static 
string 

GetMd5Hash '
(' (
string( .
input/ 4
)4 5
{ 	
MD5 
md5Hash 
= 
MD5 
. 
Create $
($ %
)% &
;& '
byte 
[ 
] 
data 
= 
md5Hash !
.! "
ComputeHash" -
(- .
Encoding. 6
.6 7
UTF87 ;
.; <
GetBytes< D
(D E
inputE J
)J K
)K L
;L M
StringBuilder 
sBuilder "
=# $
new% (
StringBuilder) 6
(6 7
)7 8
;8 9
for 
( 
int 
i 
= 
$num 
; 
i 
< 
data  $
.$ %
Length% +
;+ ,
i- .
++. 0
)0 1
{ 
sBuilder 
. 
Append 
(  
data  $
[$ %
i% &
]& '
.' (
ToString( 0
(0 1
$str1 5
)5 6
)6 7
;7 8
} 
return 
sBuilder 
. 
ToString $
($ %
)% &
;& '
} 	
} 
} «
ND:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\LoginDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public 

class 
LoginDto 
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
}		 
}

 ∞
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\QuestionnaireDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public		 

class		 
QuestionnaireDto		 !
{

 
public 

Dictionary 
< 
string  
,  !
string" (
>( )
symptoms* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string 
username 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Î
QD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\RegisterDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public 

class 
RegisterDto 
{		 
public

 
string

 
Username

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 

RePassword  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Æ

GD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Program.cs
	namespace 	
IMSCK
 
{ 
public 

static 
class 
Program 
{ 
public		 
static		 
void		 
Main		 
(		  
string		  &
[		& '
]		' (
args		) -
)		- .
{

 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} Ñ.
TD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\LoginService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public 

class 
LoginService 
{ 
private 
readonly 
	ILoginDao "
loginDAO# +
;+ ,
private 
readonly 
string 
	jwtSecret  )
;) *
public 
LoginService 
( 
	ILoginDao %
loginDAO& .
). /
{ 	
this 
. 
loginDAO 
= 
loginDAO $
;$ %
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain &
.& '
CurrentDomain' 4
.4 5
BaseDirectory5 B
)B C
. 
AddJsonFile 
( 
$str /
)/ 0
.0 1
Build1 6
(6 7
)7 8
;8 9
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
	JwtConfig3 <
)< =
)= >
;> ?
var   
	jwtConfig   
=   
section   #
.  # $
Get  $ '
<  ' (
	JwtConfig  ( 1
>  1 2
(  2 3
)  3 4
;  4 5
this"" 
."" 
	jwtSecret"" 
="" 
	jwtConfig"" &
.""& '
Secret""' -
;""- .
}$$ 	
public&& 
async&& 
Task&& 
<&& 
ServiceResponse&& )
<&&) *

Dictionary&&* 4
<&&4 5
string&&5 ;
,&&; <
string&&< B
>&&B C
>&&C D
>&&D E

loginCheck&&F P
(&&P Q
LoginDto&&Q Y
credentials&&Z e
)&&e f
{'' 	
ServiceResponse(( 
<(( 

Dictionary(( &
<((& '
string((' -
,((- .
string((/ 5
>((5 6
>((6 7
response((8 @
=((A B
new((C F
ServiceResponse((G V
<((V W

Dictionary((W a
<((a b
string((b h
,((h i
string((j p
>((p q
>((q r
(((r s
)((s t
;((t u
bool)) 

loginCheck)) 
=)) 
await)) #
loginDAO))$ ,
.)), -

loginCheck))- 7
())7 8
credentials))8 C
)))C D
;))D E
if** 
(** 

loginCheck** 
)** 
{++ 
var-- 
tokenHandler--  
=--! "
new--# &#
JwtSecurityTokenHandler--' >
(--> ?
)--? @
;--@ A
var// 
key// 
=// 
Encoding// "
.//" #
ASCII//# (
.//( )
GetBytes//) 1
(//1 2
this//2 6
.//6 7
	jwtSecret//7 @
)//@ A
;//A B
var11 
tokenDescriptor11 #
=11$ %
new11& )#
SecurityTokenDescriptor11* A
{11B C
Subject33 
=33 
new33 !
ClaimsIdentity33" 0
(330 1
new331 4
[334 5
]335 6
{337 8
new44 
Claim44 !
(44! "
$str44" ,
,44, -
credentials44. 9
.449 :
Username44: B
)44B C
,44C D
new55 
Claim55 !
(55! "#
JwtRegisteredClaimNames55" 9
.559 :
Sub55: =
,55= >
credentials55? J
.55J K
Username55K S
)55S T
,55T U
new66 
Claim66 !
(66! "#
JwtRegisteredClaimNames66" 9
.669 :
Jti66: =
,66= >
Guid66? C
.66C D
NewGuid66D K
(66K L
)66L M
.66M N
ToString66N V
(66V W
)66W X
)66X Y
,66Y Z
}77 
)77 
,77 
Expires88 
=88 
DateTime88 &
.88& '
UtcNow88' -
.88- .

AddMinutes88. 8
(888 9
$num889 <
)88< =
,88= >
SigningCredentials99 &
=99' (
new99) ,
SigningCredentials99- ?
(99? @
new99@ C 
SymmetricSecurityKey99D X
(99X Y
key99Y \
)99\ ]
,99] ^
SecurityAlgorithms99_ q
.99q r 
HmacSha256Signature	99r Ö
)
99Ö Ü
}:: 
;:: 
var<< 
token<< 
=<< 
tokenHandler<< (
.<<( )
CreateToken<<) 4
(<<4 5
tokenDescriptor<<5 D
)<<D E
;<<E F

Dictionary>> 
<>> 
string>> !
,>>! "
string>># )
>>>) *
data>>+ /
=>>0 1
new>>2 5

Dictionary>>6 @
<>>@ A
string>>A G
,>>G H
string>>I O
>>>O P
(>>P Q
)>>Q R
;>>R S
data?? 
.?? 
Add?? 
(?? 
$str??  
,??  !
tokenHandler??" .
.??. /

WriteToken??/ 9
(??9 :
token??: ?
)??? @
)??@ A
;??A B
responseAA 
.AA 
DataAA 
=AA 
dataAA  $
;AA$ %
returnBB 
responseBB 
;BB  
}CC 
returnEE 
responseEE 
;EE 
}FF 	
}HH 
}II ˇE
\D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\QuestionnaireService.cs
	namespace 	
IMSCK
 
. 
Service 
{		 
public

 

class

  
QuestionnaireService

 %
{ 
private 
readonly 
IQuestionnaireDao *
questionnaireDAO+ ;
;; <
public  
QuestionnaireService #
(# $
IQuestionnaireDao$ 5
questionnaireDAO6 F
)F G
{ 	
this 
. 
questionnaireDAO !
=" #
questionnaireDAO$ 4
;4 5
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *

Dictionary* 4
<4 5
string5 ;
,; <
string= C
>C D
>D E
>E F
addQuestionnaireG W
(W X
QuestionnaireDtoX h
questionnairei v
)v w
{ 	
ServiceResponse 
< 

Dictionary &
<& '
string' -
,- .
string/ 5
>5 6
>6 7
response8 @
=A B
newC F
ServiceResponseG V
<V W

DictionaryW a
<a b
stringb h
,h i
stringj p
>p q
>q r
(r s
)s t
;t u
if 
( 
questionnaire 
. 
symptoms &
.& '
Count' ,
==- /
$num0 1
)1 2
{ 
response 
. 
Message  
=! "
$str# 9
;9 :
response 
. 
Success  
=! "
false# (
;( )
return 
response 
;  
} 
int 
idQuestionnaire 
=  !
await" '
questionnaireDAO( 8
.8 9
addQuestionnaire9 I
(I J
questionnaireJ W
.W X
usernameX `
,` a
$numb d
)d e
;e f
if   
(   
idQuestionnaire   
==    "
-  # $
$num  $ %
)  % &
{!! 
response"" 
."" 
Message""  
=""! "
$str""# E
;""E F
response## 
.## 
Success##  
=##! "
false### (
;##( )
return$$ 
response$$ 
;$$  
}%% 
bool'' '
resultQuestionnaireSymptoms'' ,
=''- .
await''/ 4
questionnaireDAO''5 E
.''E F$
addQuestionnaireSymptoms''F ^
(''^ _
questionnaire''_ l
,''l m
idQuestionnaire''n }
)''} ~
;''~ 

Dictionary)) 
<)) 
string)) 
,)) 
string)) %
>))% &
data))' +
=)), -
new)). 1

Dictionary))2 <
<))< =
string))= C
,))C D
string))E K
>))K L
())L M
)))M N
;))N O
if++ 
(++ 
!++ '
resultQuestionnaireSymptoms++ ,
)++, -
{,, 
if// 
(// 
await// 
questionnaireDAO// *
.//* +$
rollbackAddQuestionnaire//+ C
(//C D
idQuestionnaire//D S
)//S T
)//T U
{00 
response11 
.11 
Message11 $
=11% &
$str11' j
;11j k
response22 
.22 
Success22 $
=22% &
false22' ,
;22, -
return33 
response33 #
;33# $
}44 
response66 
.66 
Message66  
=66! "
$str66# `
;66` a
response77 
.77 
Success77  
=77! "
false77# (
;77( )
return88 
response88 
;88  
}99 
data;; 
.;; 
Add;; 
(;; 
$str;; 
,;; 
$str;; 3
);;3 4
;;;4 5
response@@ 
.@@ 
Data@@ 
=@@ 
data@@  
;@@  !
returnBB 
responseBB 
;BB 
}CC 	
publicEE 
asyncEE 
TaskEE 
<EE 
ServiceResponseEE )
<EE) *
ListEE* .
<EE. /

DictionaryEE/ 9
<EE9 :
stringEE: @
,EE@ A
stringEEB H
>EEH I
>EEI J
>EEJ K
>EEK L
getQuestionnairesEEM ^
(EE^ _
stringEE_ e
usernameEEf n
)EEn o
{FF 	
ListGG 
<GG 

DictionaryGG 
<GG 
stringGG "
,GG" #
stringGG$ *
>GG* +
>GG+ ,
questionnairesGG- ;
=GG< =
awaitGG> C
questionnaireDAOGGD T
.GGT U
getQuestionnairesGGU f
(GGf g
usernameGGg o
)GGo p
;GGp q
ServiceResponseII 
<II 
ListII  
<II  !

DictionaryII! +
<II+ ,
stringII, 2
,II2 3
stringII4 :
>II: ;
>II; <
>II< =
responseII> F
=IIG H
newIII L
ServiceResponseIIM \
<II\ ]
ListII] a
<IIa b

DictionaryIIb l
<IIl m
stringIIm s
,IIs t
stringIIu {
>II{ |
>II| }
>II} ~
(II~ 
)	II Ä
;
IIÄ Å
ifKK 
(KK 
questionnairesKK 
.KK 
CountKK $
!=KK% '
$numKK( )
)KK) *
{LL 
responseMM 
.MM 
DataMM 
=MM 
questionnairesMM  .
;MM. /
responseNN 
.NN 
SuccessNN  
=NN! "
trueNN# '
;NN' (
responseOO 
.OO 
MessageOO  
=OO! "
$strOO# J
;OOJ K
returnQQ 
responseQQ 
;QQ  
}RR 
responseTT 
.TT 
SuccessTT 
=TT 
falseTT $
;TT$ %
responseUU 
.UU 
MessageUU 
=UU 
$strUU 7
;UU7 8
returnWW 
responseWW 
;WW 
}YY 	
public[[ 
async[[ 
Task[[ 
<[[ 
ServiceResponse[[ )
<[[) *
List[[* .
<[[. /

Dictionary[[/ 9
<[[9 :
string[[: @
,[[@ A
string[[B H
>[[H I
>[[I J
>[[J K
>[[K L$
getQuestionnaireSymptoms[[M e
([[e f
string[[f l
username[[m u
,[[u v
int[[w z
id[[{ }
)[[} ~
{\\ 	
List]] 
<]] 

Dictionary]] 
<]] 
string]] "
,]]" #
string]]$ *
>]]* +
>]]+ ,
symptoms]]- 5
=]]6 7
await]]8 =
questionnaireDAO]]> N
.]]N O$
getQuestionnaireSymptoms]]O g
(]]g h
username]]h p
,]]p q
id]]r t
)]]t u
;]]u v
ServiceResponse__ 
<__ 
List__  
<__  !

Dictionary__! +
<__+ ,
string__, 2
,__2 3
string__4 :
>__: ;
>__; <
>__< =
response__> F
=__G H
new__I L
ServiceResponse__M \
<__\ ]
List__] a
<__a b

Dictionary__b l
<__l m
string__m s
,__s t
string__u {
>__{ |
>__| }
>__} ~
(__~ 
)	__ Ä
;
__Ä Å
ifaa 
(aa 
symptomsaa 
.aa 
Countaa 
!=aa !
$numaa" #
)aa# $
{bb 
responsecc 
.cc 
Datacc 
=cc 
symptomscc  (
;cc( )
responsedd 
.dd 
Successdd  
=dd! "
truedd# '
;dd' (
responseee 
.ee 
Messageee  
=ee! "
$stree# R
;eeR S
returngg 
responsegg 
;gg  
}hh 
responsejj 
.jj 
Successjj 
=jj 
falsejj $
;jj$ %
responsekk 
.kk 
Messagekk 
=kk 
$strkk 1
;kk1 2
returnmm 
responsemm 
;mm 
}oo 	
}qq 
}rr ƒ
WD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\RegisterService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public 

class 
RegisterService  
{ 
private

 
readonly

 
IRegisterDao

 %
registerDAO

& 1
;

1 2
public 
RegisterService 
( 
IRegisterDao +
registerDAO, 7
)7 8
{ 	
this 
. 
registerDAO 
= 
registerDAO *
;* +
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *
string* 0
>0 1
>1 2
addUser3 :
(: ;
RegisterDto; F
credentialsG R
)R S
{ 	
ServiceResponse 
< 
string "
>" #
response$ ,
=- .
new/ 2
ServiceResponse3 B
<B C
stringC I
>I J
(J K
)K L
;L M
if 
( 
credentials 
. 
Password $
.$ %
Equals% +
(+ ,
credentials, 7
.7 8

RePassword8 B
)B C
&&D F
awaitG L
registerDAOM X
.X Y
addUserY `
(` a
credentialsa l
)l m
)m n
{ 
response 
. 
Data 
= 
$str  2
;2 3
return 
response 
;  
} 
return 
response 
; 
} 	
} 
} ≤
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\SymptomService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public		 

class		 
SymptomService		 
{

 
private 
readonly 
ISymptomsDao %
symptomsDAO& 1
;1 2
public 
SymptomService 
( 
ISymptomsDao *
symptomsDAO+ 6
)6 7
{ 	
this 
. 
symptomsDAO 
= 
symptomsDAO *
;* +
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *
List* .
<. /

Dictionary/ 9
<9 :
string: @
,@ A
stringB H
>H I
>I J
>J K
>K L
getSymptomsM X
(X Y
)Y Z
{ 	
List 
< 

Dictionary 
< 
string "
," #
string$ *
>* +
>+ ,
symptoms- 5
=6 7
await8 =
symptomsDAO> I
.I J
getSymptomsJ U
(U V
)V W
;W X
ServiceResponse 
< 
List  
<  !

Dictionary! +
<+ ,
string, 2
,2 3
string4 :
>: ;
>; <
>< =
response> F
=G H
newI L
ServiceResponseM \
<\ ]
List] a
<a b

Dictionaryb l
<l m
stringm s
,s t
stringu {
>{ |
>| }
>} ~
(~ 
)	 Ä
;
Ä Å
if 
( 
symptoms 
. 
Count 
!= !
$num" #
)# $
{ 
response 
. 
Data 
= 
symptoms  (
;( )
response 
. 
Message  
=! "
$str# D
;D E
} 
else 
{ 
response 
. 
Message  
=! "
$str# ?
;? @
response 
. 
Success  
=! "
false# (
;( )
}   
return"" 
response"" 
;"" 
}## 	
}%% 
}&& ê9
GD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Startup.cs
	namespace 	
IMSCK
 
{ 
public 

class 
Startup 
{ 
public 
static 
readonly 
JwtSettings *
jwtSettings+ 6
=7 8
new9 <
JwtSettings= H
(H I
)I J
;J K
private 
readonly 
string 
	jwtSecret  )
;) *
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
configuration 
. 
Bind 
( 
nameof %
(% &
jwtSettings& 1
)1 2
,2 3
jwtSettings4 ?
)? @
;@ A
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain "
." #
CurrentDomain# 0
.0 1
BaseDirectory1 >
)> ?
. 
AddJsonFile 
( 
$str +
)+ ,
., -
Build- 2
(2 3
)3 4
;4 5
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
	JwtConfig3 <
)< =
)= >
;> ?
var 
	jwtConfig 
= 
section #
.# $
Get$ '
<' (
	JwtConfig( 1
>1 2
(2 3
)3 4
;4 5
this!! 
.!! 
	jwtSecret!! 
=!! 
	jwtConfig!! &
.!!& '
Secret!!' -
;!!- .
}"" 	
public$$ 
IConfiguration$$ 
Configuration$$ +
{$$, -
get$$. 1
;$$1 2
}$$3 4
public'' 
void'' 
ConfigureServices'' %
(''% &
IServiceCollection''& 8
services''9 A
)''A B
{(( 	
services)) 
.)) 
AddControllers)) #
())# $
)))$ %
;))% &
services++ 
.++ 
AddSingleton++ !
(++! "
jwtSettings++" -
)++- .
;++. /
services-- 
.-- 
AddSingleton-- !
<--! "
	ILoginDao--" +
,--+ ,
LoginDao--- 5
>--5 6
(--6 7
)--7 8
;--8 9
services.. 
... 
AddSingleton.. !
<..! "
IQuestionnaireDao.." 3
,..3 4
QuestionnaireDao..5 E
>..E F
(..F G
)..G H
;..H I
services// 
.// 
AddSingleton// !
<//! "
IRegisterDao//" .
,//. /
RegisterDao//0 ;
>//; <
(//< =
)//= >
;//> ?
services00 
.00 
AddSingleton00 !
<00! "
ISymptomsDao00" .
,00. /
SymptomsDao000 ;
>00; <
(00< =
)00= >
;00> ?
services22 
.22 
	AddScoped22 
<22 
RegisterService22 .
,22. /
RegisterService220 ?
>22? @
(22@ A
)22A B
;22B C
services44 
.44 
AddAuthentication44 &
(44& '
x44' (
=>44) +
{55 
x66 
.66 %
DefaultAuthenticateScheme66 -
=66. /
JwtBearerDefaults660 A
.66A B 
AuthenticationScheme66B V
;66V W
x77 
.77 
DefaultScheme77 !
=77" #
JwtBearerDefaults77$ 5
.775 6 
AuthenticationScheme776 J
;77J K
x88 
.88 "
DefaultChallengeScheme88 *
=88+ ,
JwtBearerDefaults88- >
.88> ? 
AuthenticationScheme88? S
;88S T
}:: 
):: 
.:: 
AddJwtBearer:: 
(:: 
x:: 
=>::  "
{;; 
x<< 
.<< 
	SaveToken<< 
=<< 
true<<  $
;<<$ %
x== 
.== %
TokenValidationParameters== -
===. /
new==0 3%
TokenValidationParameters==4 M
{>> $
ValidateIssuerSigningKey?? .
=??/ 0
true??1 5
,??5 6
IssuerSigningKey@@ &
=@@' (
new@@) , 
SymmetricSecurityKey@@- A
(@@A B
Encoding@@B J
.@@J K
ASCII@@K P
.@@P Q
GetBytes@@Q Y
(@@Y Z
this@@Z ^
.@@^ _
	jwtSecret@@_ h
)@@h i
)@@i j
,@@j k
ValidateIssuerAA $
=AA% &
falseAA' ,
,AA, -
ValidateAudienceBB &
=BB' (
falseBB) .
,BB. /!
RequireExpirationTimeCC +
=CC, -
falseCC. 3
,CC3 4
ValidateLifetimeDD &
=DD' (
trueDD) -
}EE 
;EE 
}FF 
)FF 
;FF 
servicesHH 
.HH 
AddCorsHH 
(HH 
optionsHH $
=>HH% '
optionsHH( /
.HH/ 0
AddDefaultPolicyHH0 @
(HH@ A
builderII 
=>II 
builderII &
.II& '
AllowAnyOriginII' 5
(II5 6
)II6 7
.II7 8
AllowAnyMethodII8 F
(IIF G
)IIG H
.IIH I
AllowAnyHeaderIII W
(IIW X
)IIX Y
)IIY Z
)IIZ [
;II\ ]
}JJ 	
publicMM 

voidMM 
	ConfigureMM 
(MM 
IApplicationBuilderMM -
appMM. 1
,MM1 2
IWebHostEnvironmentMM3 F
envMMG J
)MMJ K
{NN 	
ifPP 
(PP 
envPP 
.PP 
IsDevelopmentPP !
(PP! "
)PP" #
)PP# $
{QQ 
appRR 
.RR %
UseDeveloperExceptionPageRR -
(RR- .
)RR. /
;RR/ 0
}SS 
appUU 
.UU 
UseHttpsRedirectionUU #
(UU# $
)UU$ %
;UU% &
appWW 
.WW 

UseRoutingWW 
(WW 
)WW 
;WW 
appYY 
.YY 
UseCorsYY 
(YY 
)YY 
;YY 
app[[ 
.[[ 
UseAuthentication[[ !
([[! "
)[[" #
;[[# $
app]] 
.]] 
UseAuthorization]]  
(]]  !
)]]! "
;]]" #
app__ 
.__ 
UseEndpoints__ 
(__ 
	endpoints__ &
=>__' )
{`` 
	endpointsaa 
.aa 
MapControllersaa (
(aa( )
)aa) *
;aa* +
}bb 
)bb 
;bb 
}cc 	
}dd 
}ee 