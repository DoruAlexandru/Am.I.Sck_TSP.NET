å
SD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\LoginController.cs
	namespace

 	
IMSCK


 
.

 
API

 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
LoginController  
:! "
ControllerBase# 1
{ 
private 
readonly 
LoginService %
loginService& 2
;2 3
public 
LoginController 
( 
)  
{ 	
loginService 
= 
new 
LoginService +
(+ ,
new, /
LoginDao0 8
(8 9
)9 :
): ;
;; <
} 	
[ 	
Route	 
( 
$str 
) 
] 
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
LoginDto9 A
credentialsB M
)M N
{ 	
ServiceResponse 
< 

Dictionary &
<& '
string' -
,- .
string/ 5
>5 6
>6 7
check8 =
=> ?
await@ E
loginServiceF R
.R S

loginCheckS ]
(] ^
credentials^ i
)i j
;j k
if 
( 
check 
. 
Data 
!= 
null "
)" #
{# $
return 
Ok 
( 
check 
)  
;  !
}   
return!! 

BadRequest!! 
(!! 
$str!! 1
)!!1 2
;!!2 3
}## 	
}%% 
}&& ù'
[D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\QuestionnaireController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
]N O
public 

class #
QuestionnaireController (
:) *

Controller+ 5
{ 
private 
readonly  
QuestionnaireService - 
questionnaireService. B
;B C
public #
QuestionnaireController &
(& '
)' (
{ 	 
questionnaireService  
=! "
new# & 
QuestionnaireService' ;
(; <
new< ?
QuestionnaireDao@ P
(P Q
)Q R
)R S
;S T
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str !
)! "
]" #
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
QuestionnaireDto9 I
questionnaireJ W
)W X
{   	
ServiceResponse"" 
<"" 

Dictionary"" &
<""& '
string""' -
,""- .
string""/ 5
>""5 6
>""6 7
response""8 @
=""A B
await""C H 
questionnaireService""I ]
.""] ^
addQuestionnaire""^ n
(""n o
questionnaire""o |
)""| }
;""} ~
if$$ 
($$ 
response$$ 
.$$ 
Success$$  
)$$  !
{%% 
return&& 
Ok&& 
(&& 
response&& "
)&&" #
;&&# $
}'' 
return(( 

BadRequest(( 
((( 
response(( &
)((& '
;((' (
}** 	
[-- 	
HttpGet--	 
]-- 
[.. 	
Route..	 
(.. 
$str.. %
)..% &
]..& '
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
Get//) ,
(//, -
)//- .
{00 	
string11 
username11 
=11 
HttpContext11 )
.11) *
GetUserName11* 5
(115 6
)116 7
;117 8
ServiceResponse33 
<33 
List33  
<33  !

Dictionary33! +
<33+ ,
string33, 2
,332 3
string334 :
>33: ;
>33; <
>33< =
response33> F
=33G H
await33I N 
questionnaireService33O c
.33c d
getQuestionnaires33d u
(33u v
username33v ~
)33~ 
;	33 Ä
if55 
(55 
response55 
.55 
Success55  
)55  !
{66 
return77 
Ok77 
(77 
response77 "
)77" #
;77# $
}88 
return99 

BadRequest99 
(99 
response99 &
)99& '
;99' (
};; 	
[== 	
HttpGet==	 
]== 
[>> 	
Route>>	 
(>> 
$str>> 
)>> 
]>>  
public?? 
async?? 
Task?? 
<?? 
IActionResult?? '
>??' (
Get??) ,
(??, -
[??- .
	FromRoute??. 7
]??7 8
int??9 <
id??= ?
)??? @
{@@ 	
stringAA 
usernameAA 
=AA 
HttpContextAA )
.AA) *
GetUserNameAA* 5
(AA5 6
)AA6 7
;AA7 8
ServiceResponseCC 
<CC 
ListCC  
<CC  !

DictionaryCC! +
<CC+ ,
stringCC, 2
,CC2 3
stringCC4 :
>CC: ;
>CC; <
>CC< =
responseCC> F
=CCG H
awaitCCI N 
questionnaireServiceCCO c
.CCc d$
getQuestionnaireSymptomsCCd |
(CC| }
username	CC} Ö
,
CCÖ Ü
id
CCá â
)
CCâ ä
;
CCä ã
ifEE 
(EE 
responseEE 
.EE 
SuccessEE  
)EE  !
{FF 
returnGG 
OkGG 
(GG 
responseGG "
)GG" #
;GG# $
}HH 
returnII 

BadRequestII 
(II 
responseII &
)II& '
;II' (
}KK 	
}LL 
}MM Æ
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\RegisterController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
RegisterController #
:$ %

Controller& 0
{ 
private 
readonly 
RegisterService (
registerService) 8
;8 9
public 
RegisterController !
(! "
RegisterService" 1
registerService2 A
)A B
{ 	
this 
. 
registerService  
=! "
registerService# 2
;2 3
} 	
[ 	
Route	 
( 
$str 
) 
]  
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Post) -
(- .
[. /
FromBody/ 7
]7 8
RegisterDto9 D
credentialsE P
)P Q
{ 	
ServiceResponse 
< 
string "
>" #
check$ )
=* +
await, 1
registerService2 A
.A B
addUserB I
(I J
credentialsJ U
)U V
;V W
if 
( 
check 
. 
Data 
!= 
null "
)" #
{ 
return 
Ok 
( 
check 
)  
;  !
} 
return   

BadRequest   
(   
$str   =
)  = >
;  > ?
}"" 	
}## 
}$$ “
UD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\API\SymptomController.cs
	namespace 	
IMSCK
 
. 
API 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
[ 
	Authorize 
( !
AuthenticationSchemes $
=% &
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
]N O
public 

class 
SymptomController "
:# $

Controller% /
{ 
private 
readonly 
SymptomService '
symptomService( 6
;6 7
public 
SymptomController  
(  !
)! "
{ 	
symptomService 
= 
new  
SymptomService! /
(/ 0
new0 3
SymptomsDao4 ?
(? @
)@ A
)A B
;B C
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
)  
]  !
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
ServiceResponse 
< 
List "
<# $

Dictionary% /
</ 0
string0 6
,6 7
string8 >
>> ?
>? @
>@ A
responseB J
=K L
awaitM R
symptomServiceS a
.a b
getSymptomsb m
(m n
)n o
;o p
if 
( 
response 
. 
Data 
. 
Count #
!=$ &
$num' (
)( )
{ 
return   
Ok   
(   
response   "
)  " #
;  # $
}!! 
return"" 

BadRequest"" 
("" 
response"" &
)""& '
;""' (
}$$ 	
}&& 
}'' ˆ
YD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Auth\AuthenticationResult.cs
	namespace 	
IMSCK
 
. 
Auth 
{ 
public 

class  
AuthenticationResult %
{		 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
Succes 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
ErrorMessage "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ≠
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Auth\JwtSettings.cs
	namespace 	
IMSCK
 
. 
Auth 
{ 
public		 

class		 
JwtSettings		 
{

 
public 
string 
Secret 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ∑
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Config\DBConfig.cs
	namespace 	
IMSCK
 
. 
Config 
{ 
public 

class 
DBConfig 
{		 
public

 
string

 
dbConnectionString

 (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
} 
} €
MD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ILoginDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
	ILoginDao 
{ 
public 
Task 
< 
bool 
> 

loginCheck $
($ %
LoginDto% -
credentials. 9
)9 :
;: ;
}

 
} Ü
UD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\IQuestionnaireDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public		 

	interface		 
IQuestionnaireDao		 &
{

 
public 
Task 
< 
int 
> 
addQuestionnaire )
() *
string* 0
username1 9
,9 :
int; >
severityPercentage? Q
)Q R
;R S
public 
Task 
< 
bool 
> $
addQuestionnaireSymptoms 2
(2 3
QuestionnaireDto3 C
questionnaireD Q
,Q R
intS V
idQuestionnaireW f
)f g
;g h
public 
Task 
< 
bool 
> $
rollbackAddQuestionnaire 2
(2 3
int3 6
idQuestionnaire7 F
)F G
;G H
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5
getQuestionnaires6 G
(G H
stringH N
usernameO W
)W X
;X Y
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5$
getQuestionnaireSymptoms6 N
(N O
stringO U
usernameV ^
,^ _
int` c
idd f
)f g
;g h
} 
} ·
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\IRegisterDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
IRegisterDao !
{ 
public 
Task 
< 
bool 
> 
addUser !
(! "
RegisterDto" -
credentials. 9
)9 :
;: ;
}

 
} æ
PD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ISymptomsDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

	interface 
ISymptomsDao !
{		 
public 
Task 
< 
List 
< 

Dictionary #
<# $
string$ *
,* +
string, 2
>2 3
>3 4
>4 5
getSymptoms6 A
(A B
)B C
;C D
} 
} é
LD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\LoginDao.cs
	namespace		 	
IMSCK		
 
.		 
DAO		 
{

 
public 

class 
LoginDao 
: 
	ILoginDao %
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
LoginDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain !
.! "
CurrentDomain" /
./ 0
BaseDirectory0 =
)= >
. 
AddJsonFile 
( 
$str *
)* +
.+ ,
Build, 1
(1 2
)2 3
;3 4
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
bool 
> 

loginCheck  *
(* +
LoginDto+ 3
credentials4 ?
)? @
{ 	
string   
md5StringPassword   $
=  % &
	AppHelper  ' 0
.  0 1

GetMd5Hash  1 ;
(  ; <
credentials  < G
.  G H
Password  H P
)  P Q
;  Q R
conn"" 
."" 
Open"" 
("" 
)"" 
;"" 
string## 
sql## 
=## 
$str## @
+##A B
credentials##C N
.##N O
Username##O W
+##X Y
$str##Z n
+##o p
md5StringPassword	##q Ç
+
##É Ñ
$str
##Ö à
;
##à â
MySqlCommand$$ 
cmd$$ 
=$$ 
new$$ "
MySqlCommand$$# /
($$/ 0
sql$$0 3
,$$3 4
conn$$5 9
)$$9 :
;$$: ;
MySqlDataReader%% 
result%% "
=%%# $
await%%% *
Task%%+ /
.%%/ 0
Run%%0 3
(%%3 4
(%%4 5
)%%5 6
=>%%7 9
{&& 
return'' 
cmd'' 
.'' 
ExecuteReader'' (
(''( )
)'') *
;''* +
}(( 
)(( 
;(( 
if** 
(** 
result** 
.** 
HasRows** 
)** 
{++ 
conn,, 
.,, 
Close,, 
(,, 
),, 
;,, 
return-- 
true-- 
;-- 
}.. 
conn// 
.// 
Close// 
(// 
)// 
;// 
return11 
false11 
;11 
}22 	
}44 
}55 ©ç
TD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\QuestionnaireDao.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

class 
QuestionnaireDao !
:" #
IQuestionnaireDao$ 5
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
QuestionnaireDao 
(  
)  !
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain "
." #
CurrentDomain# 0
.0 1
BaseDirectory1 >
)> ?
. 
AddJsonFile 
( 
$str +
)+ ,
., -
Build- 2
(2 3
)3 4
;4 5
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
int 
> 
addQuestionnaire /
(/ 0
string0 6
username7 ?
,? @
intA D
severityPercentageE W
)W X
{   	
conn!! 
.!! 
Open!! 
(!! 
)!! 
;!! 
int"" 
idQuestionnaire"" 
=""  !
await""" '#
generateIdQuestionnaire""( ?
(""? @
)""@ A
;""A B
string$$ 
sql$$ 
=$$ 
$str$$ r
+$$s t
idQuestionnaire%% 
+%%  !
$str%%" '
+%%( )
username%%* 2
+%%3 4
$str%%5 ;
+%%< =
DateTime%%> F
.%%F G
Now%%G J
.%%J K
ToString%%K S
(%%S T
$str%%T k
)%%k l
+%%m n
$str%%o t
+%%u v
severityPercentage	%%w â
+
%%ä ã
$str
%%å ê
;
%%ê ë
MySqlCommand'' 
cmd'' 
='' 
new'' "
MySqlCommand''# /
(''/ 0
sql''0 3
,''3 4
conn''5 9
)''9 :
;'': ;
int(( 
result(( 
=(( 
await(( 
Task(( #
.((# $
Run(($ '
(((' (
(((( )
)(() *
=>((+ -
{)) 
return** 
cmd** 
.** 
ExecuteNonQuery** *
(*** +
)**+ ,
;**, -
}++ 
)++ 
;++ 
if-- 
(-- 
result-- 
!=-- 
$num-- 
)-- 
{.. 
conn// 
.// 
Close// 
(// 
)// 
;// 
return00 
idQuestionnaire00 &
;00& '
}11 
conn22 
.22 
Close22 
(22 
)22 
;22 
return33 
-33 
$num33 
;33 
}44 	
public66 
async66 
Task66 
<66 
bool66 
>66 $
rollbackAddQuestionnaire66  8
(668 9
int669 <
idQuestionnaire66= L
)66L M
{77 	
conn88 
.88 
Open88 
(88 
)88 
;88 
string:: 
sql:: 
=:: 
$str:: ]
+::^ _
idQuestionnaire::` o
;::o p
MySqlCommand;; 
cmd;; 
=;; 
new;; "
MySqlCommand;;# /
(;;/ 0
sql;;0 3
,;;3 4
conn;;5 9
);;9 :
;;;: ;
int<< 
result<< 
=<< 
await<< 
Task<< #
.<<# $
Run<<$ '
(<<' (
(<<( )
)<<) *
=><<+ -
{== 
return>> 
cmd>> 
.>> 
ExecuteNonQuery>> *
(>>* +
)>>+ ,
;>>, -
}?? 
)?? 
;?? 
ifBB 
(BB 
resultBB 
==BB 
$numBB 
)BB 
{CC 
connDD 
.DD 
CloseDD 
(DD 
)DD 
;DD 
returnEE 
falseEE 
;EE 
}FF 
sqlHH 
=HH 
$strHH F
+HHG H
idQuestionnaireHHI X
;HHX Y
cmdII 
=II 
newII 
MySqlCommandII "
(II" #
sqlII# &
,II& '
connII( ,
)II, -
;II- .
resultJJ 
=JJ 
cmdJJ 
.JJ 
ExecuteNonQueryJJ (
(JJ( )
)JJ) *
;JJ* +
ifLL 
(LL 
resultLL 
==LL 
$numLL 
)LL 
{MM 
connNN 
.NN 
CloseNN 
(NN 
)NN 
;NN 
returnOO 
falseOO 
;OO 
}PP 
connQQ 
.QQ 
CloseQQ 
(QQ 
)QQ 
;QQ 
returnRR 
trueRR 
;RR 
}SS 	
publicUU 
asyncUU 
TaskUU 
<UU 
boolUU 
>UU $
addQuestionnaireSymptomsUU  8
(UU8 9
QuestionnaireDtoUU9 I
questionnaireUUJ W
,UUW X
intUUY \
idQuestionnaireUU] l
)UUl m
{VV 	
connXX 
.XX 
OpenXX 
(XX 
)XX 
;XX 
ListYY 
<YY 
stringYY 
>YY 
keyListYY  
=YY! "
newYY# &
ListYY' +
<YY+ ,
stringYY, 2
>YY2 3
(YY3 4
questionnaireYY4 A
.YYA B
symptomsYYB J
.YYJ K
KeysYYK O
)YYO P
;YYP Q
intZZ 
resultZZ 
=ZZ 
-ZZ 
$numZZ 
;ZZ 
foreach[[ 
([[ 
string[[ 
key[[ 
in[[  "
keyList[[# *
)[[* +
{\\ 
string]] 
sql]] 
=]] 
$str	]] Ä
+
]]Å Ç
idQuestionnaire^^ #
+^^$ %
$str^^& +
+^^, -
key^^. 1
+^^2 3
$str^^4 :
+^^; <
questionnaire^^= J
.^^J K
symptoms^^K S
[^^S T
key^^T W
]^^W X
+^^Y Z
$str^^[ `
;^^` a
MySqlCommand__ 
cmd__  
=__! "
new__# &
MySqlCommand__' 3
(__3 4
sql__4 7
,__7 8
conn__9 =
)__= >
;__> ?
result`` 
=`` 
await`` 
Task`` #
.``# $
Run``$ '
(``' (
(``( )
)``) *
=>``+ -
{aa 
returnbb 
cmdbb 
.bb 
ExecuteNonQuerybb .
(bb. /
)bb/ 0
;bb0 1
}cc 
)cc 
;cc 
ifee 
(ee 
resultee 
==ee 
$numee 
)ee  
{ff 
returngg 
falsegg  
;gg  !
}hh 
}ii 
returnkk 
truekk 
;kk 
}ll 	
privatenn 
asyncnn 
Tasknn 
<nn 
intnn 
>nn #
generateIdQuestionnairenn  7
(nn7 8
)nn8 9
{oo 	
stringpp 
sqlpp 
=pp 
$strpp L
;ppL M
MySqlCommandqq 
cmdqq 
=qq 
newqq "
MySqlCommandqq# /
(qq/ 0
sqlqq0 3
,qq3 4
connqq5 9
)qq9 :
;qq: ;
MySqlDataReaderrr 
resultrr "
=rr# $
awaitrr% *
Taskrr+ /
.rr/ 0
Runrr0 3
(rr3 4
(rr4 5
)rr5 6
=>rr7 9
{ss 
returntt 
cmdtt 
.tt 
ExecuteReadertt (
(tt( )
)tt) *
;tt* +
}uu 
)uu 
;uu 
resultww 
.ww 
Readww 
(ww 
)ww 
;ww 
intxx 
idQuestionnairexx 
=xx  !
resultxx" (
.xx( )
GetInt32xx) 1
(xx1 2
$numxx2 3
)xx3 4
+xx5 6
$numxx7 8
;xx8 9
resultyy 
.yy 
Closeyy 
(yy 
)yy 
;yy 
returnzz 
idQuestionnairezz "
;zz" #
}{{ 	
public}} 
async}} 
Task}} 
<}} 
List}} 
<}} 

Dictionary}} )
<}}) *
string}}* 0
,}}0 1
string}}2 8
>}}8 9
>}}9 :
>}}: ;
getQuestionnaires}}< M
(}}M N
string}}N T
username}}U ]
)}}] ^
{~~ 	
conn 
. 
Open 
( 
) 
; 
string
ÄÄ 
sql
ÄÄ 
=
ÄÄ 
$"
ÄÄ q
cSELECT idQuestionnaire, userName, date, severityPercentage FROM questionnaire WHERE userName like '
ÄÄ ~
{
ÄÄ~ 
usernameÄÄ á
}ÄÄá à
'ÄÄà â
"ÄÄâ ä
;ÄÄä ã
MySqlCommand
ÅÅ 
cmd
ÅÅ 
=
ÅÅ 
new
ÅÅ "
MySqlCommand
ÅÅ# /
(
ÅÅ/ 0
sql
ÅÅ0 3
,
ÅÅ3 4
conn
ÅÅ5 9
)
ÅÅ9 :
;
ÅÅ: ;
MySqlDataReader
ÇÇ 
result
ÇÇ "
=
ÇÇ# $
await
ÇÇ% *
Task
ÇÇ+ /
.
ÇÇ/ 0
Run
ÇÇ0 3
(
ÇÇ3 4
(
ÇÇ4 5
)
ÇÇ5 6
=>
ÇÇ7 9
{
ÉÉ 
return
ÑÑ 
cmd
ÑÑ 
.
ÑÑ 
ExecuteReader
ÑÑ (
(
ÑÑ( )
)
ÑÑ) *
;
ÑÑ* +
}
ÖÖ 
)
ÖÖ 
;
ÖÖ 
List
áá 
<
áá 

Dictionary
áá 
<
áá 
string
áá "
,
áá" #
string
áá$ *
>
áá* +
>
áá+ ,
questionnaires
áá- ;
=
áá< =
new
áá> A
List
ááB F
<
ááF G

Dictionary
ááG Q
<
ááQ R
string
ááR X
,
ááX Y
string
ááZ `
>
áá` a
>
ááa b
(
ááb c
)
áác d
;
áád e

Dictionary
àà 
<
àà 
string
àà 
,
àà 
string
àà %
>
àà% &
questionnaire
àà' 4
;
àà4 5
while
ää 
(
ää 
result
ää 
.
ää 
Read
ää 
(
ää 
)
ää  
)
ää  !
{
ãã 
questionnaire
åå 
=
åå 
new
åå  #

Dictionary
åå$ .
<
åå. /
string
åå/ 5
,
åå5 6
string
åå7 =
>
åå= >
(
åå> ?
)
åå? @
;
åå@ A
questionnaire
çç 
.
çç 
Add
çç !
(
çç! "
$str
çç" &
,
çç& '
result
çç( .
.
çç. /
GetInt32
çç/ 7
(
çç7 8
$num
çç8 9
)
çç9 :
.
çç: ;
ToString
çç; C
(
ççC D
)
ççD E
)
ççE F
;
ççF G
questionnaire
éé 
.
éé 
Add
éé !
(
éé! "
$str
éé" ,
,
éé, -
result
éé. 4
.
éé4 5
	GetString
éé5 >
(
éé> ?
$num
éé? @
)
éé@ A
)
ééA B
;
ééB C
questionnaire
èè 
.
èè 
Add
èè !
(
èè! "
$str
èè" (
,
èè( )
result
èè* 0
.
èè0 1
GetDateTime
èè1 <
(
èè< =
$num
èè= >
)
èè> ?
.
èè? @
ToString
èè@ H
(
èèH I
)
èèI J
)
èèJ K
;
èèK L
questionnaire
êê 
.
êê 
Add
êê !
(
êê! "
$str
êê" 6
,
êê6 7
result
êê8 >
.
êê> ?
GetInt32
êê? G
(
êêG H
$num
êêH I
)
êêI J
.
êêJ K
ToString
êêK S
(
êêS T
)
êêT U
)
êêU V
;
êêV W
questionnaires
ëë 
.
ëë 
Add
ëë "
(
ëë" #
questionnaire
ëë# 0
)
ëë0 1
;
ëë1 2
}
íí 
conn
îî 
.
îî 
Close
îî 
(
îî 
)
îî 
;
îî 
System
ïï 
.
ïï 
Console
ïï 
.
ïï 
	WriteLine
ïï $
(
ïï$ %
questionnaires
ïï% 3
.
ïï3 4
Count
ïï4 9
)
ïï9 :
;
ïï: ;
return
óó 
questionnaires
óó !
;
óó! "
}
òò 	
public
öö 
async
öö 
Task
öö 
<
öö 
List
öö 
<
öö 

Dictionary
öö )
<
öö) *
string
öö* 0
,
öö0 1
string
öö2 8
>
öö8 9
>
öö9 :
>
öö: ;&
getQuestionnaireSymptoms
öö< T
(
ööT U
string
ööU [
username
öö\ d
,
ööd e
int
ööf i
id
ööj l
)
ööl m
{
õõ 	
conn
úú 
.
úú 
Open
úú 
(
úú 
)
úú 
;
úú 
string
ùù 
sql
ùù 
=
ùù 
$"
ùù q
cSELECT qs.idQuestionnaireSymptoms, qs.symptomName, qs.symptomSeverity FROM questionnairesymptoms qs
ùù ~
"
ùù~ 
+ùùÄ Å
$"
ûû m
_ JOIN questionnaire q ON q.idQuestionnaire = qs.idQuestionnaireSymptoms WHERE q.userName like '
ûû q
{
ûûq r
username
ûûr z
}
ûûz {
'
ûû{ |
"
ûû| }
+
ûû~ 
$"
üü '
 AND q.idQuestionnaire = 
üü +
{
üü+ ,
id
üü, .
}
üü. /
"
üü/ 0
;
üü0 1
MySqlCommand
°° 
cmd
°° 
=
°° 
new
°° "
MySqlCommand
°°# /
(
°°/ 0
sql
°°0 3
,
°°3 4
conn
°°5 9
)
°°9 :
;
°°: ;
MySqlDataReader
¢¢ 
result
¢¢ "
=
¢¢# $
await
¢¢% *
Task
¢¢+ /
.
¢¢/ 0
Run
¢¢0 3
(
¢¢3 4
(
¢¢4 5
)
¢¢5 6
=>
¢¢7 9
{
££ 
return
§§ 
cmd
§§ 
.
§§ 
ExecuteReader
§§ (
(
§§( )
)
§§) *
;
§§* +
}
•• 
)
•• 
;
•• 
List
ßß 
<
ßß 

Dictionary
ßß 
<
ßß 
string
ßß "
,
ßß" #
string
ßß$ *
>
ßß* +
>
ßß+ ,
symptoms
ßß- 5
=
ßß6 7
new
ßß8 ;
List
ßß< @
<
ßß@ A

Dictionary
ßßA K
<
ßßK L
string
ßßL R
,
ßßR S
string
ßßT Z
>
ßßZ [
>
ßß[ \
(
ßß\ ]
)
ßß] ^
;
ßß^ _

Dictionary
®® 
<
®® 
string
®® 
,
®® 
string
®® %
>
®®% &
symptom
®®' .
;
®®. /
while
™™ 
(
™™ 
result
™™ 
.
™™ 
Read
™™ 
(
™™ 
)
™™  
)
™™  !
{
´´ 
symptom
¨¨ 
=
¨¨ 
new
¨¨ 

Dictionary
¨¨ (
<
¨¨( )
string
¨¨) /
,
¨¨/ 0
string
¨¨1 7
>
¨¨7 8
(
¨¨8 9
)
¨¨9 :
;
¨¨: ;
symptom
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
$str
≠≠  
,
≠≠  !
result
≠≠" (
.
≠≠( )
GetInt32
≠≠) 1
(
≠≠1 2
$num
≠≠2 3
)
≠≠3 4
.
≠≠4 5
ToString
≠≠5 =
(
≠≠= >
)
≠≠> ?
)
≠≠? @
;
≠≠@ A
symptom
ÆÆ 
.
ÆÆ 
Add
ÆÆ 
(
ÆÆ 
$str
ÆÆ "
,
ÆÆ" #
result
ÆÆ$ *
.
ÆÆ* +
	GetString
ÆÆ+ 4
(
ÆÆ4 5
$num
ÆÆ5 6
)
ÆÆ6 7
)
ÆÆ7 8
;
ÆÆ8 9
symptom
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
$str
ØØ &
,
ØØ& '
result
ØØ( .
.
ØØ. /
GetInt32
ØØ/ 7
(
ØØ7 8
$num
ØØ8 9
)
ØØ9 :
.
ØØ: ;
ToString
ØØ; C
(
ØØC D
)
ØØD E
)
ØØE F
;
ØØF G
symptoms
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
symptom
∞∞ $
)
∞∞$ %
;
∞∞% &
}
±± 
conn
≥≥ 
.
≥≥ 
Close
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
System
¥¥ 
.
¥¥ 
Console
¥¥ 
.
¥¥ 
	WriteLine
¥¥ $
(
¥¥$ %
symptoms
¥¥% -
.
¥¥- .
Count
¥¥. 3
)
¥¥3 4
;
¥¥4 5
return
∂∂ 
symptoms
∂∂ 
;
∂∂ 
}
∑∑ 	
}
∏∏ 
}ππ  &
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\RegisterDao.cs
	namespace		 	
IMSCK		
 
.		 
DAO		 
{

 
public 

class 
RegisterDao 
: 
IRegisterDao +
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
RegisterDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain "
." #
CurrentDomain# 0
.0 1
BaseDirectory1 >
)> ?
. 
AddJsonFile 
( 
$str +
)+ ,
., -
Build- 2
(2 3
)3 4
;4 5
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
bool 
> 
addUser  '
(' (
RegisterDto( 3
credentials4 ?
)? @
{ 	
conn 
. 
Open 
( 
) 
; 
if!! 
(!! 
!!! 
await!! 
findUser!! !
(!!! "
credentials!!" -
)!!- .
)!!. /
{"" 
string## 
md5StringPassword## (
=##) *
	AppHelper##+ 4
.##4 5

GetMd5Hash##5 ?
(##? @
credentials##@ K
.##K L
Password##L T
)##T U
;##U V
string%% 
sql%% 
=%% 
$str%% L
+%%M N
credentials%%O Z
.%%Z [
Username%%[ c
+%%d e
$str%%f l
+%%m n
md5StringPassword	%%o Ä
+
%%Å Ç
$str
%%É à
;
%%à â
MySqlCommand&& 
cmd&&  
=&&! "
new&&# &
MySqlCommand&&' 3
(&&3 4
sql&&4 7
,&&7 8
conn&&9 =
)&&= >
;&&> ?
int'' 
result'' 
='' 
await'' "
Task''# '
.''' (
Run''( +
(''+ ,
('', -
)''- .
=>''/ 1
{(( 
return)) 
cmd)) 
.)) 
ExecuteNonQuery)) .
()). /
)))/ 0
;))0 1
}** 
)** 
;** 
if,, 
(,, 
result,, 
!=,, 
$num,, 
),,  
{-- 
conn.. 
... 
Close.. 
(.. 
)..  
;..  !
return// 
true// 
;//  
}00 
}11 
conn33 
.33 
Close33 
(33 
)33 
;33 
return44 
false44 
;44 
}55 	
private77 
async77 
Task77 
<77 
bool77 
>77  
findUser77! )
(77) *
RegisterDto77* 5
credentials776 A
)77A B
{88 	
string99 
sql99 
=99 
$str99 @
+99A B
credentials99C N
.99N O
Username99O W
+99X Y
$str99Z ^
;99^ _
MySqlCommand:: 
cmd:: 
=:: 
new:: "
MySqlCommand::# /
(::/ 0
sql::0 3
,::3 4
conn::5 9
)::9 :
;::: ;
MySqlDataReader;; 
result;; "
=;;# $
await;;% *
Task;;+ /
.;;/ 0
Run;;0 3
(;;3 4
(;;4 5
);;5 6
=>;;7 9
{<< 
return== 
cmd== 
.== 
ExecuteReader== (
(==( )
)==) *
;==* +
}>> 
)>> 
;>> 
bool@@ 
resp@@ 
=@@ 
result@@ 
.@@ 
HasRows@@ &
;@@& '
resultAA 
.AA 
CloseAA 
(AA 
)AA 
;AA 
returnBB 
respBB 
;BB 
}DD 	
}EE 
}FF õ

SD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\ServiceResponse.cs
	namespace 	
IMSCK
 
. 
DAO 
{ 
public 

class 
ServiceResponse  
<  !
T! "
>" #
{ 
public 
T 
Data 
{ 
get 
; 
set  
;  !
}" #
public

 
bool

 
Success

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
true

, 0
;

0 1
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
null. 2
;2 3
public 
static 
implicit 
operator '
ServiceResponse( 7
<7 8
T8 9
>9 :
(: ;
ServiceResponse; J
<J K
objectK Q
>Q R
vS T
)T U
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ¢"
OD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\DAO\SymptomsDao.cs
	namespace

 	
IMSCK


 
.

 
DAO

 
{ 
public 

class 
SymptomsDao 
: 
ISymptomsDao +
{ 
private 
readonly 
MySqlConnection (
conn) -
;- .
public 
SymptomsDao 
( 
) 
{ 	
var 
config 
= 
new  
ConfigurationBuilder 1
(1 2
)2 3
. 
SetBasePath 
( 
	AppDomain !
.! "
CurrentDomain" /
./ 0
BaseDirectory0 =
)= >
. 
AddJsonFile 
( 
$str *
)* +
.+ ,
Build, 1
(1 2
)2 3
;3 4
var 
section 
= 
config  
.  !

GetSection! +
(+ ,
nameof, 2
(2 3
DBConfig3 ;
); <
)< =
;= >
var 
dbConfig 
= 
section "
." #
Get# &
<& '
DBConfig' /
>/ 0
(0 1
)1 2
;2 3
conn 
= 
new 
MySqlConnection &
(& '
dbConfig' /
./ 0
dbConnectionString0 B
)B C
;C D
} 	
public 
async 
Task 
< 
List 
< 

Dictionary )
<) *
string* 0
,0 1
string2 8
>8 9
>9 :
>: ;
getSymptoms< G
(G H
)H I
{ 	
conn 
. 
Open 
( 
) 
; 
string   
sql   
=   
$str   O
;  O P
MySqlCommand!! 
cmd!! 
=!! 
new!! "
MySqlCommand!!# /
(!!/ 0
sql!!0 3
,!!3 4
conn!!5 9
)!!9 :
;!!: ;
MySqlDataReader"" 
result"" "
=""# $
await""% *
Task""+ /
.""/ 0
Run""0 3
(""3 4
(""4 5
)""5 6
=>""7 9
{## 
return$$ 
cmd$$ 
.$$ 
ExecuteReader$$ (
($$( )
)$$) *
;$$* +
}%% 
)%% 
;%% 
List'' 
<'' 

Dictionary'' 
<'' 
string'' "
,''" #
string''$ *
>''* +
>''+ ,
symptoms''- 5
=''6 7
new''8 ;
List''< @
<''@ A

Dictionary''A K
<''K L
string''L R
,''R S
string''T Z
>''Z [
>''[ \
(''\ ]
)''] ^
;''^ _

Dictionary(( 
<(( 
string(( 
,(( 
string(( %
>((% &
symptom((' .
;((. /
while** 
(** 
result** 
.** 
Read** 
(** 
)**  
)**  !
{++ 
symptom,, 
=,, 
new,, 

Dictionary,, (
<,,( )
string,,) /
,,,/ 0
string,,1 7
>,,7 8
(,,8 9
),,9 :
;,,: ;
symptom-- 
.-- 
Add-- 
(-- 
$str-- "
,--" #
result--# )
.--) *
	GetString--* 3
(--3 4
$num--4 5
)--5 6
)--6 7
;--7 8
symptom.. 
... 
Add.. 
(.. 
$str.. )
,..) *
result..* 0
...0 1
	GetString..1 :
(..: ;
$num..; <
)..< =
)..= >
;..> ?
symptoms// 
.// 
Add// 
(// 
symptom// $
)//$ %
;//% &
}00 
conn22 
.22 
Close22 
(22 
)22 
;22 
return33 
symptoms33 
;33 
}44 	
}55 
}66 ô	
\D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Extensions\GeneralExtensions.cs
	namespace 	
IMSCK
 
. 

Extensions 
{ 
public		 

static		 
class		 
GeneralExtensions		 )
{

 
public 
static 
string 
GetUserName (
(( )
this) -
HttpContext. 9
httpContext: E
)E F
{ 	
if 
( 
httpContext 
. 
User  
==! #
null$ (
)( )
{ 
return 
string 
. 
Empty #
;# $
} 
else 
{ 
return 
httpContext "
." #
User# '
.' (
Claims( .
.. /
Single/ 5
(5 6
x6 7
=>8 :
x; <
.< =
Type= A
==B D
$strE O
)O P
.P Q
ValueQ V
;V W
} 
} 	
} 
} Î
QD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Helpers\AppHelper.cs
	namespace 	
IMSCK
 
. 
Helpers 
{		 
public

 

static

 
class

 
	AppHelper

 !
{ 
public 
static 
string 

GetMd5Hash '
(' (
string( .
input/ 4
)4 5
{ 	
MD5 
md5Hash 
= 
MD5 
. 
Create $
($ %
)% &
;& '
byte 
[ 
] 
data 
= 
md5Hash !
.! "
ComputeHash" -
(- .
Encoding. 6
.6 7
UTF87 ;
.; <
GetBytes< D
(D E
inputE J
)J K
)K L
;L M
StringBuilder 
sBuilder "
=# $
new% (
StringBuilder) 6
(6 7
)7 8
;8 9
for 
( 
int 
i 
= 
$num 
; 
i 
< 
data  $
.$ %
Length% +
;+ ,
i- .
++. 0
)0 1
{ 
sBuilder 
. 
Append 
(  
data  $
[$ %
i% &
]& '
.' (
ToString( 0
(0 1
$str1 5
)5 6
)6 7
;7 8
} 
return 
sBuilder 
. 
ToString $
($ %
)% &
;& '
} 	
} 
} «
ND:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\LoginDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public 

class 
LoginDto 
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
}		 
}

 ∞
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\QuestionnaireDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public		 

class		 
QuestionnaireDto		 !
{

 
public 

Dictionary 
< 
string  
,  !
string" (
>( )
symptoms* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string 
username 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Î
QD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Model\RegisterDto.cs
	namespace 	
IMSCK
 
. 
Model 
{ 
public 

class 
RegisterDto 
{		 
public

 
string

 
Username

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 

RePassword  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Æ

GD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Program.cs
	namespace 	
IMSCK
 
{ 
public 

static 
class 
Program 
{ 
public		 
static		 
void		 
Main		 
(		  
string		  &
[		& '
]		' (
args		) -
)		- .
{

 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} É'
TD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\LoginService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public 

class 
LoginService 
{ 
private 
readonly 
	ILoginDao "
loginDAO# +
;+ ,
private 
readonly 
JwtSettings $
jwtSettings% 0
;0 1
public 
LoginService 
( 
	ILoginDao %
loginDAO& .
). /
{ 	
this 
. 
loginDAO 
= 
loginDAO $
;$ %
this 
. 
jwtSettings 
= 
Startup &
.& '
jwtSettings' 2
;2 3
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *

Dictionary* 4
<4 5
string5 ;
,; <
string< B
>B C
>C D
>D E

loginCheckF P
(P Q
LoginDtoQ Y
credentialsZ e
)e f
{ 	
ServiceResponse 
< 

Dictionary &
<& '
string' -
,- .
string/ 5
>5 6
>6 7
response8 @
=A B
newC F
ServiceResponseG V
<V W

DictionaryW a
<a b
stringb h
,h i
stringj p
>p q
>q r
(r s
)s t
;t u
bool 

loginCheck 
= 
await #
loginDAO$ ,
., -

loginCheck- 7
(7 8
credentials8 C
)C D
;D E
if   
(   

loginCheck   
)   
{!! 
var## 
tokenHandler##  
=##! "
new### &#
JwtSecurityTokenHandler##' >
(##> ?
)##? @
;##@ A
var%% 
key%% 
=%% 
Encoding%% "
.%%" #
ASCII%%# (
.%%( )
GetBytes%%) 1
(%%1 2
jwtSettings%%2 =
.%%= >
Secret%%> D
)%%D E
;%%E F
var'' 
tokenDescriptor'' #
=''$ %
new''& )#
SecurityTokenDescriptor''* A
{''B C
Subject)) 
=)) 
new)) !
ClaimsIdentity))" 0
())0 1
new))1 4
[))4 5
]))5 6
{))7 8
new** 
Claim** !
(**! "
$str**" ,
,**, -
credentials**. 9
.**9 :
Username**: B
)**B C
,**C D
new++ 
Claim++ !
(++! "#
JwtRegisteredClaimNames++" 9
.++9 :
Sub++: =
,++= >
credentials++? J
.++J K
Username++K S
)++S T
,++T U
new,, 
Claim,, !
(,,! "#
JwtRegisteredClaimNames,," 9
.,,9 :
Jti,,: =
,,,= >
Guid,,? C
.,,C D
NewGuid,,D K
(,,K L
),,L M
.,,M N
ToString,,N V
(,,V W
),,W X
),,X Y
,,,Y Z
}-- 
)-- 
,-- 
Expires.. 
=.. 
DateTime.. &
...& '
UtcNow..' -
...- .

AddMinutes... 8
(..8 9
$num..9 <
)..< =
,..= >
SigningCredentials// &
=//' (
new//) ,
SigningCredentials//- ?
(//? @
new//@ C 
SymmetricSecurityKey//D X
(//X Y
key//Y \
)//\ ]
,//] ^
SecurityAlgorithms//_ q
.//q r 
HmacSha256Signature	//r Ö
)
//Ö Ü
}00 
;00 
var22 
token22 
=22 
tokenHandler22 (
.22( )
CreateToken22) 4
(224 5
tokenDescriptor225 D
)22D E
;22E F

Dictionary44 
<44 
string44 !
,44! "
string44# )
>44) *
data44+ /
=440 1
new442 5

Dictionary446 @
<44@ A
string44A G
,44G H
string44I O
>44O P
(44P Q
)44Q R
;44R S
data55 
.55 
Add55 
(55 
$str55  
,55  !
tokenHandler55" .
.55. /

WriteToken55/ 9
(559 :
token55: ?
)55? @
)55@ A
;55A B
response77 
.77 
Data77 
=77 
data77  $
;77$ %
return88 
response88 
;88  
}99 
return;; 
response;; 
;;; 
}<< 	
}>> 
}?? °B
\D:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\QuestionnaireService.cs
	namespace 	
IMSCK
 
. 
Service 
{		 
public

 

class

  
QuestionnaireService

 %
{ 
private 
readonly 
IQuestionnaireDao *
questionnaireDAO+ ;
;; <
public  
QuestionnaireService #
(# $
IQuestionnaireDao$ 5
questionnaireDAO6 F
)F G
{ 	
this 
. 
questionnaireDAO !
=" #
questionnaireDAO$ 4
;4 5
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *

Dictionary* 4
<4 5
string5 ;
,; <
string= C
>C D
>D E
>E F
addQuestionnaireG W
(W X
QuestionnaireDtoX h
questionnairei v
)v w
{ 	
ServiceResponse 
< 

Dictionary &
<& '
string' -
,- .
string/ 5
>5 6
>6 7
response8 @
=A B
newC F
ServiceResponseG V
<V W

DictionaryW a
<a b
stringb h
,h i
stringj p
>p q
>q r
(r s
)s t
;t u
int 
idQuestionnaire 
=  !
await" '
questionnaireDAO( 8
.8 9
addQuestionnaire9 I
(I J
questionnaireJ W
.W X
usernameX `
,` a
$numb d
)d e
;e f
if 
( 
idQuestionnaire 
==  "
-# $
$num$ %
)% &
{ 
response 
. 
Message  
=! "
$str# E
;E F
response 
. 
Success  
=! "
false# (
;( )
return 
response 
;  
} 
bool   '
resultQuestionnaireSymptoms   ,
=  - .
await  / 4
questionnaireDAO  5 E
.  E F$
addQuestionnaireSymptoms  F ^
(  ^ _
questionnaire  _ l
,  l m
idQuestionnaire  n }
)  } ~
;  ~ 

Dictionary"" 
<"" 
string"" 
,"" 
string"" %
>""% &
data""' +
="", -
new"". 1

Dictionary""2 <
<""< =
string""= C
,""C D
string""E K
>""K L
(""L M
)""M N
;""N O
if$$ 
($$ 
!$$ '
resultQuestionnaireSymptoms$$ ,
)$$, -
{%% 
if(( 
((( 
await(( 
questionnaireDAO(( *
.((* +$
rollbackAddQuestionnaire((+ C
(((C D
idQuestionnaire((D S
)((S T
)((T U
{)) 
response** 
.** 
Message** $
=**% &
$str**' j
;**j k
response++ 
.++ 
Success++ $
=++% &
false++' ,
;++, -
return,, 
response,, #
;,,# $
}-- 
response// 
.// 
Message//  
=//! "
$str//# `
;//` a
response00 
.00 
Success00  
=00! "
false00# (
;00( )
return11 
response11 
;11  
}22 
data44 
.44 
Add44 
(44 
$str44 
,44 
$str44 3
)443 4
;444 5
response99 
.99 
Data99 
=99 
data99  
;99  !
return;; 
response;; 
;;; 
}<< 	
public>> 
async>> 
Task>> 
<>> 
ServiceResponse>> )
<>>) *
List>>* .
<>>. /

Dictionary>>/ 9
<>>9 :
string>>: @
,>>@ A
string>>B H
>>>H I
>>>I J
>>>J K
>>>K L
getQuestionnaires>>M ^
(>>^ _
string>>_ e
username>>f n
)>>n o
{?? 	
List@@ 
<@@ 

Dictionary@@ 
<@@ 
string@@ "
,@@" #
string@@$ *
>@@* +
>@@+ ,
questionnaires@@- ;
=@@< =
await@@> C
questionnaireDAO@@D T
.@@T U
getQuestionnaires@@U f
(@@f g
username@@g o
)@@o p
;@@p q
ServiceResponseBB 
<BB 
ListBB  
<BB  !

DictionaryBB! +
<BB+ ,
stringBB, 2
,BB2 3
stringBB4 :
>BB: ;
>BB; <
>BB< =
responseBB> F
=BBG H
newBBI L
ServiceResponseBBM \
<BB\ ]
ListBB] a
<BBa b

DictionaryBBb l
<BBl m
stringBBm s
,BBs t
stringBBu {
>BB{ |
>BB| }
>BB} ~
(BB~ 
)	BB Ä
;
BBÄ Å
ifDD 
(DD 
questionnairesDD 
.DD 
CountDD $
!=DD% '
$numDD( )
)DD) *
{EE 
responseFF 
.FF 
DataFF 
=FF 
questionnairesFF  .
;FF. /
responseGG 
.GG 
SuccessGG  
=GG! "
trueGG# '
;GG' (
responseHH 
.HH 
MessageHH  
=HH! "
$strHH# J
;HHJ K
returnJJ 
responseJJ 
;JJ  
}KK 
responseMM 
.MM 
SuccessMM 
=MM 
falseMM $
;MM$ %
responseNN 
.NN 
MessageNN 
=NN 
$strNN 7
;NN7 8
returnPP 
responsePP 
;PP 
}RR 	
publicTT 
asyncTT 
TaskTT 
<TT 
ServiceResponseTT )
<TT) *
ListTT* .
<TT. /

DictionaryTT/ 9
<TT9 :
stringTT: @
,TT@ A
stringTTB H
>TTH I
>TTI J
>TTJ K
>TTK L$
getQuestionnaireSymptomsTTM e
(TTe f
stringTTf l
usernameTTm u
,TTu v
intTTw z
idTT{ }
)TT} ~
{UU 	
ListVV 
<VV 

DictionaryVV 
<VV 
stringVV "
,VV" #
stringVV$ *
>VV* +
>VV+ ,
symptomsVV- 5
=VV6 7
awaitVV8 =
questionnaireDAOVV> N
.VVN O$
getQuestionnaireSymptomsVVO g
(VVg h
usernameVVh p
,VVp q
idVVr t
)VVt u
;VVu v
ServiceResponseXX 
<XX 
ListXX  
<XX  !

DictionaryXX! +
<XX+ ,
stringXX, 2
,XX2 3
stringXX4 :
>XX: ;
>XX; <
>XX< =
responseXX> F
=XXG H
newXXI L
ServiceResponseXXM \
<XX\ ]
ListXX] a
<XXa b

DictionaryXXb l
<XXl m
stringXXm s
,XXs t
stringXXu {
>XX{ |
>XX| }
>XX} ~
(XX~ 
)	XX Ä
;
XXÄ Å
ifZZ 
(ZZ 
symptomsZZ 
.ZZ 
CountZZ 
!=ZZ !
$numZZ" #
)ZZ# $
{[[ 
response\\ 
.\\ 
Data\\ 
=\\ 
symptoms\\  (
;\\( )
response]] 
.]] 
Success]]  
=]]! "
true]]# '
;]]' (
response^^ 
.^^ 
Message^^  
=^^! "
$str^^# R
;^^R S
return`` 
response`` 
;``  
}aa 
responsecc 
.cc 
Successcc 
=cc 
falsecc $
;cc$ %
responsedd 
.dd 
Messagedd 
=dd 
$strdd 1
;dd1 2
returnff 
responseff 
;ff 
}hh 	
}jj 
}kk ƒ
WD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\RegisterService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public 

class 
RegisterService  
{ 
private

 
readonly

 
IRegisterDao

 %
registerDAO

& 1
;

1 2
public 
RegisterService 
( 
IRegisterDao +
registerDAO, 7
)7 8
{ 	
this 
. 
registerDAO 
= 
registerDAO *
;* +
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *
string* 0
>0 1
>1 2
addUser3 :
(: ;
RegisterDto; F
credentialsG R
)R S
{ 	
ServiceResponse 
< 
string "
>" #
response$ ,
=- .
new/ 2
ServiceResponse3 B
<B C
stringC I
>I J
(J K
)K L
;L M
if 
( 
credentials 
. 
Password $
.$ %
Equals% +
(+ ,
credentials, 7
.7 8

RePassword8 B
)B C
&&D F
awaitG L
registerDAOM X
.X Y
addUserY `
(` a
credentialsa l
)l m
)m n
{ 
response 
. 
Data 
= 
$str  2
;2 3
return 
response 
;  
} 
return 
response 
; 
} 	
} 
} ≤
VD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Service\SymptomService.cs
	namespace 	
IMSCK
 
. 
Service 
{ 
public		 

class		 
SymptomService		 
{

 
private 
readonly 
ISymptomsDao %
symptomsDAO& 1
;1 2
public 
SymptomService 
( 
ISymptomsDao *
symptomsDAO+ 6
)6 7
{ 	
this 
. 
symptomsDAO 
= 
symptomsDAO *
;* +
} 	
public 
async 
Task 
< 
ServiceResponse )
<) *
List* .
<. /

Dictionary/ 9
<9 :
string: @
,@ A
stringB H
>H I
>I J
>J K
>K L
getSymptomsM X
(X Y
)Y Z
{ 	
List 
< 

Dictionary 
< 
string "
," #
string$ *
>* +
>+ ,
symptoms- 5
=6 7
await8 =
symptomsDAO> I
.I J
getSymptomsJ U
(U V
)V W
;W X
ServiceResponse 
< 
List  
<  !

Dictionary! +
<+ ,
string, 2
,2 3
string4 :
>: ;
>; <
>< =
response> F
=G H
newI L
ServiceResponseM \
<\ ]
List] a
<a b

Dictionaryb l
<l m
stringm s
,s t
stringu {
>{ |
>| }
>} ~
(~ 
)	 Ä
;
Ä Å
if 
( 
symptoms 
. 
Count 
!= !
$num" #
)# $
{ 
response 
. 
Data 
= 
symptoms  (
;( )
response 
. 
Message  
=! "
$str# D
;D E
} 
else 
{ 
response 
. 
Message  
=! "
$str# ?
;? @
response 
. 
Success  
=! "
false# (
;( )
}   
return"" 
response"" 
;"" 
}## 	
}%% 
}&& é0
GD:\Facultate\Luci\Am.I.Sck_TSP.NET\BackEnd\IMSCK\IMSCK\IMSCK\Startup.cs
	namespace 	
IMSCK
 
{ 
public 

class 
Startup 
{ 
public 
static 
readonly 
JwtSettings *
jwtSettings+ 6
=7 8
new9 <
JwtSettings= H
(H I
)I J
;J K
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
configuration 
. 
Bind 
( 
nameof %
(% &
jwtSettings& 1
)1 2
,2 3
jwtSettings4 ?
)? @
;@ A
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services   
.   
AddSingleton   !
(  ! "
jwtSettings  " -
)  - .
;  . /
services"" 
."" 
AddSingleton"" !
<""! "
	ILoginDao""" +
,""+ ,
LoginDao""- 5
>""5 6
(""6 7
)""7 8
;""8 9
services## 
.## 
AddSingleton## !
<##! "
IQuestionnaireDao##" 3
,##3 4
QuestionnaireDao##5 E
>##E F
(##F G
)##G H
;##H I
services$$ 
.$$ 
AddSingleton$$ !
<$$! "
IRegisterDao$$" .
,$$. /
RegisterDao$$0 ;
>$$; <
($$< =
)$$= >
;$$> ?
services%% 
.%% 
AddSingleton%% !
<%%! "
ISymptomsDao%%" .
,%%. /
SymptomsDao%%0 ;
>%%; <
(%%< =
)%%= >
;%%> ?
services'' 
.'' 
	AddScoped'' 
<'' 
RegisterService'' .
,''. /
RegisterService''0 ?
>''? @
(''@ A
)''A B
;''B C
services)) 
.)) 
AddAuthentication)) &
())& '
x))' (
=>))) +
{** 
x++ 
.++ %
DefaultAuthenticateScheme++ -
=++. /
JwtBearerDefaults++0 A
.++A B 
AuthenticationScheme++B V
;++V W
x,, 
.,, 
DefaultScheme,, !
=,," #
JwtBearerDefaults,,$ 5
.,,5 6 
AuthenticationScheme,,6 J
;,,J K
x-- 
.-- "
DefaultChallengeScheme-- *
=--+ ,
JwtBearerDefaults--- >
.--> ? 
AuthenticationScheme--? S
;--S T
}// 
)// 
.// 
AddJwtBearer// 
(// 
x// 
=>//  "
{00 
x11 
.11 
	SaveToken11 
=11 
true11  $
;11$ %
x22 
.22 %
TokenValidationParameters22 -
=22. /
new220 3%
TokenValidationParameters224 M
{33 $
ValidateIssuerSigningKey44 .
=44/ 0
true441 5
,445 6
IssuerSigningKey55 &
=55' (
new55) , 
SymmetricSecurityKey55- A
(55A B
Encoding55B J
.55J K
ASCII55K P
.55P Q
GetBytes55Q Y
(55Y Z
jwtSettings55Z e
.55e f
Secret55f l
)55l m
)55m n
,55n o
ValidateIssuer66 $
=66% &
false66' ,
,66, -
ValidateAudience77 &
=77' (
false77) .
,77. /!
RequireExpirationTime88 +
=88, -
false88. 3
,883 4
ValidateLifetime99 &
=99' (
true99) -
}:: 
;:: 
};; 
);; 
;;; 
services== 
.== 
AddCors== 
(== 
options== $
=>==% '
options==( /
.==/ 0
AddDefaultPolicy==0 @
(==@ A
builder>> 
=>>> 
builder>> &
.>>& '
AllowAnyOrigin>>' 5
(>>5 6
)>>6 7
.>>7 8
AllowAnyMethod>>8 F
(>>F G
)>>G H
.>>H I
AllowAnyHeader>>I W
(>>W X
)>>X Y
)>>Y Z
)>>Z [
;>>\ ]
}?? 	
publicBB 

voidBB 
	ConfigureBB 
(BB 
IApplicationBuilderBB -
appBB. 1
,BB1 2
IWebHostEnvironmentBB3 F
envBBG J
)BBJ K
{CC 	
ifEE 
(EE 
envEE 
.EE 
IsDevelopmentEE !
(EE! "
)EE" #
)EE# $
{FF 
appGG 
.GG %
UseDeveloperExceptionPageGG -
(GG- .
)GG. /
;GG/ 0
}HH 
appJJ 
.JJ 
UseHttpsRedirectionJJ #
(JJ# $
)JJ$ %
;JJ% &
appLL 
.LL 

UseRoutingLL 
(LL 
)LL 
;LL 
appNN 
.NN 
UseCorsNN 
(NN 
)NN 
;NN 
appPP 
.PP 
UseAuthenticationPP !
(PP! "
)PP" #
;PP# $
appRR 
.RR 
UseAuthorizationRR  
(RR  !
)RR! "
;RR" #
appTT 
.TT 
UseEndpointsTT 
(TT 
	endpointsTT &
=>TT' )
{UU 
	endpointsVV 
.VV 
MapControllersVV (
(VV( )
)VV) *
;VV* +
}WW 
)WW 
;WW 
}XX 	
}YY 
}ZZ 